{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","../../projects/ngx-gallery/src/lib/ngx-gallery-helper.service.ts","../../projects/ngx-gallery/src/lib/ngx-gallery-animation.model.ts","../../projects/ngx-gallery/src/lib/ngx-gallery-image-size.model.ts","../../projects/ngx-gallery/src/lib/ngx-gallery-layout.model.ts","../../projects/ngx-gallery/src/lib/ngx-gallery-order.model.ts","../../projects/ngx-gallery/src/lib/ngx-gallery-action.model.ts","../../projects/ngx-gallery/src/lib/ngx-gallery-options.ts","../../projects/ngx-gallery/src/lib/ngx-gallery-ordered-image.model.ts","../projects/ngx-gallery/src/lib/ngx-gallery-preview/ngx-gallery-preview.component.ts","../projects/ngx-gallery/src/lib/ngx-gallery-image/ngx-gallery-image.component.ts","../projects/ngx-gallery/src/lib/ngx-gallery-thumbnails/ngx-gallery-thumbnails.component.ts","../../projects/ngx-gallery/src/lib/ngx-gallery.component.ts","../projects/ngx-gallery/src/lib/ngx-gallery-action/ngx-gallery-action.component.ts","../projects/ngx-gallery/src/lib/ngx-gallery-arrows/ngx-gallery-arrows.component.ts","../projects/ngx-gallery/src/lib/ngx-gallery-bullets/ngx-gallery-bullets.component.ts","../../projects/ngx-gallery/src/lib/ngx-gallery.module.ts","../../projects/ngx-gallery/src/lib/ngx-gallery-image.model.ts"],"names":["Object","create","__read","o","n","m","Symbol","iterator","r","e","i","call","ar","next","done","push","value","error","NgxGalleryHelperService","renderer","this","swipeHandlers","Map","prototype","manageSwipe","status","element","id","nextHandler","prevHandler","handlers","getSwipeHandlers","set","listen","nativeElement","map","handler","removeSwipeHandlers","validateUrl","url","replace","RegExp","getBackgroundUrl","image","get","delete","getFileType","fileSource","startsWith","substr","Math","min","indexOf","fileExtension","get_url_extension","split","pop","trim","Injectable","Renderer2","NgxGalleryAnimation","Fade","Slide","Rotate","Zoom","NgxGalleryImageSize","Cover","Contain","NgxGalleryLayout","ThumbnailsTop","ThumbnailsBottom","NgxGalleryOrder","Column","Row","Page","action","icon","disabled","titleText","onClick","obj","preventDefaults","undefined","breakpoint","use","source","defaultValue","width","height","fullWidth","layout","startIndex","linkTarget","lazyLoading","imagePercent","imageArrows","imageArrowsAutoHide","imageSwipe","imageAnimation","imageSize","imageAutoPlay","imageAutoPlayInterval","imageAutoPlayPauseOnHover","imageInfinityMove","imageActions","length","NgxGalleryAction","imageDescription","imageBullets","thumbnails","thumbnailsColumns","thumbnailsRows","thumbnailsPercent","thumbnailsMargin","thumbnailsArrows","thumbnailsArrowsAutoHide","thumbnailsSwipe","thumbnailsMoveSize","thumbnailsOrder","thumbnailsRemainingCount","thumbnailsAsLinks","thumbnailsAutoHide","thumbnailMargin","thumbnailSize","thumbnailActions","preview","previewDescription","previewArrows","previewArrowsAutoHide","previewSwipe","previewFullscreen","previewForceFullscreen","previewCloseOnClick","previewCloseOnEsc","previewKeyboardNavigation","previewAnimation","previewAutoPlay","previewAutoPlayInterval","previewAutoPlayPauseOnHover","previewInfinityMove","previewZoom","previewZoomStep","previewZoomMax","previewZoomMin","previewRotate","previewDownload","previewCustom","previewBullets","arrowPrevIcon","arrowNextIcon","closeIcon","fullscreenIcon","spinnerIcon","zoomInIcon","zoomOutIcon","rotateLeftIcon","rotateRightIcon","downloadIcon","actions","src","type","index","NgxGalleryPreviewComponent","sanitization","elementRef","helperService","changeDetectorRef","showSpinner","positionLeft","positionTop","zoomValue","loading","rotateValue","onOpen","EventEmitter","onClose","onActiveChange","isOpen","initialX","initialY","initialLeft","initialTop","isMove","ngOnInit","arrows","arrowsAutoHide","ngOnChanges","changes","_this","swipe","showNext","showPrev","ngOnDestroy","keyDownListener","onMouseEnter","onMouseLeave","onKeyDown","keyboardNavigation","isKeyboardPrev","isKeyboardNext","closeOnEsc","isKeyboardEsc","close","open","emit","show","forceFullscreen","manageFullscreen","closeFullscreen","stopAutoPlay","imageMouseEnter","autoPlay","autoPlayPauseOnHover","imageMouseLeave","startAutoPlay","timer","setTimeout","autoPlayInterval","clearTimeout","showAtIndex","canShowNext","images","canShowPrev","infinityMove","fullscreen","doc","document","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","msFullscreenElement","openFullscreen","getSafeUrl","bypassSecurityTrustUrl","zoomIn","canZoomIn","zoomStep","zoomMax","zoomOut","canZoomOut","zoomMin","resetPosition","rotateLeft","rotateRight","getTransform","bypassSecurityTrustStyle","canDragOnZoom","zoom","mouseDownHandler","getClientX","getClientY","preventDefault","mouseUpHandler","mouseMoveHandler","touches","clientX","clientY","keyCode","documentElement","requestFullscreen","msRequestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","isFullscreen","exitFullscreen","msExitFullscreen","mozCancelFullScreen","webkitExitFullscreen","first","animation","_show","srcIndex","description","descriptions","markForCheck","isLoaded","previewImage","onload","img","complete","naturalWidth","Component","args","selector","template","DomSanitizer","ElementRef","ChangeDetectorRef","Input","Output","ViewChild","HostListener","NgxGalleryImageComponent","canChangeImage","reset","selectedIndex","getImages","indexes_1","prevIndex","nextIndex","filter","setInterval","clearInterval","handleClick","event","clickable","stopPropagation","setChangeTimeout","timeout","NgxGalleryThumbnailsComponent","minStopIndex","validateIndex","moveRight","moveLeft","remainingCountValue","rows","columns","mouseenter","setDefaultPosition","remainingCount","slice","order","stopIndex","moveSize","hasLink","links","canMoveRight","maxIndex","getMaxIndex","setThumbnailsPosition","canMoveLeft","getThumbnailLeft","calculatedIndex","floor","ceil","getThumbnailPosition","getThumbnailTop","getThumbnailWidth","getThumbnailDimension","getThumbnailHeight","thumbnailsLeft","thumbnailsMarginLeft","margin","canShowArrows","getVisibleCount","newIndex","count","getSafeStyle","NgxGalleryComponent","myElement","imagesReady","change","previewOpen","previewClose","previewChange","oldImagesLength","prevBreakpoint","options","opt","NgxGalleryOptions","sortOptions","setBreakpoint","setOptions","checkFullWidth","currentOptions","ngDoCheck","oldImages","setImages","resetThumbnails","ngAfterViewInit","onResize","_this_1","fullWidthTimeout","getImageHeight","getThumbnailsHeight","getThumbnailsMarginTop","getThumbnailsMarginBottom","openPreview","previewEnabled","onPreviewOpen","onPreviewClose","selectFromImage","select","selectFromThumbnails","previewSelect","moveThumbnailsRight","thubmnails","moveThumbnailsLeft","canMoveThumbnailsRight","canMoveThumbnailsLeft","body","clientWidth","left","parentNode","innerWidth","forEach","big","medium","small","smallImages","mediumImages","NgxGalleryOrderedImage","bigImages","labels","label","breakpoints","window","arguments","concat","__spread","a","sort","b","combineOptions","second","keys","val","providers","HostBinding","NgxGalleryActionComponent","changeDetection","ChangeDetectionStrategy","OnPush","NgxGalleryArrowsComponent","onPrevClick","onNextClick","handlePrevClick","handleNextClick","NgxGalleryBulletsComponent","active","onChange","getBullets","Array","handleChange","NgModule","declarations","imports","CommonModule","exports","schemas","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA"],"mappings":";;;;;;;;;;;;;;oFAyG6BA,OAAOC,gBAwBpBC,EAAOC,EAAGC,GACtB,IAAIC,EAAsB,mBAAXC,QAAyBH,EAAEG,OAAOC,UACjD,IAAKF,EAAG,OAAOF,EACf,IAAmBK,EAAYC,EAA3BC,EAAIL,EAAEM,KAAKR,GAAOS,EAAK,GAC3B,IACI,WAAc,IAANR,GAAgBA,KAAM,MAAQI,EAAIE,EAAEG,QAAQC,MAAMF,EAAGG,KAAKP,EAAEQ,OAExE,MAAOC,GAASR,EAAI,CAAEQ,MAAOA,WAEzB,IACQT,IAAMA,EAAEM,OAAST,EAAIK,EAAU,SAAIL,EAAEM,KAAKD,WAExC,GAAID,EAAG,MAAMA,EAAEQ,OAE7B,OAAOL,EAoDcZ,OAAOC,wBC5L5B,SAAAiB,EAAoBC,GAAAC,KAAAD,SAAAA,EAFZC,KAAAC,cAAyC,IAAIC,WAIrDJ,EAAAK,UAAAC,YAAA,SAAYC,EAAiBC,EAAqBC,EAAYC,EAAuBC,GAEjF,IAAMC,EAAWV,KAAKW,iBAAiBJ,GAGvC,IACQF,IAAWK,EACXV,KAAKC,cAAcW,IAAIL,EAAI,CACvBP,KAAKD,SAASc,OAAOP,EAAQQ,cAAe,aAAa,WAAM,OAAAN,OAC/DR,KAAKD,SAASc,OAAOP,EAAQQ,cAAe,cAAc,WAAM,OAAAL,UAE5DJ,GAAUK,IAClBA,EAASK,KAAI,SAACC,GAAY,OAAAA,OAC1BhB,KAAKiB,oBAAoBV,IAE/B,MAAOlB,MAGbS,EAAAK,UAAAe,YAAA,SAAYC,GACR,OAAIA,EAAIC,QACGD,EAAIC,QAAQ,IAAIC,OAAO,IAAK,KAAM,OACpCD,QAAQ,IAAIC,OAAO,IAAM,KAAM,OAE7BF,GAIfrB,EAAAK,UAAAmB,iBAAA,SAAiBC,GACb,MAAO,QAAWvB,KAAKkB,YAAYK,GAAS,MAGxCzB,EAAAK,UAAAQ,iBAAA,SAAiBJ,GACrB,OAAOP,KAAKC,cAAcuB,IAAIjB,IAG1BT,EAAAK,UAAAc,oBAAA,SAAoBV,GACxBP,KAAKC,cAAcwB,OAAOlB,IAG9BT,EAAAK,UAAAuB,YAAA,SAAYC,GACR,GAAIA,EAAWC,WAAW,SACtB,OAAOD,EAAWE,OAAO,EAAGC,KAAKC,IAAIJ,EAAWK,QAAQ,KAAML,EAAWK,QAAQ,MAAQ,GAE7F,IAAIC,EAAgBjC,KAAKkC,kBAAkBP,GAC3C,OAAKM,GACmB,QAAjBA,GAA4C,OAAjBA,GACV,OAAjBA,GAA2C,OAAjBA,GACT,OAAjBA,EAG+B,eAA7BN,EAAWE,OAAO,EAAG,KACT,OAAjBI,GAA2C,OAAjBA,GACN,OAAjBA,GAA2C,OAAjBA,GACT,OAAjBA,EACI,QAEJ,UARI,SAWfnC,EAAAK,UAAA+B,kBAAA,SAAkBf,GACd,OAAOA,EAAIgB,MAAM,QAAQ,GAAGA,MAAM,KAAKC,MAAMC,iCAnEpDC,EAAAA,sDAFgCC,EAAAA,mBCAjC,aACWC,EAAAC,KAAO,OACPD,EAAAE,MAAQ,QACRF,EAAAG,OAAS,SACTH,EAAAI,KAAO,aCJlB,aACWC,EAAAC,MAAQ,QACRD,EAAAE,QAAU,gBCFrB,aACWC,EAAAC,cAAgB,iBAChBD,EAAAE,iBAAmB,0BCF9B,aACWC,EAAAC,OAAS,EACTD,EAAAE,IAAM,EACNF,EAAAG,KAAO,QCYd,SAAYC,GACRvD,KAAKwD,KAAOD,EAAOC,KACnBxD,KAAKyD,WAAWF,EAAOE,UAAWF,EAAOE,SACzCzD,KAAK0D,UAAYH,EAAOG,UAAYH,EAAOG,UAAY,GAEvD1D,KAAK2D,QAAUJ,EAAOI,WCuI1B,SAAYC,GAER,IAAMC,OAAqCC,IAAnBF,EAAIG,WAE5B,SAASC,EAAOC,EAAWC,GACvB,OAAON,SAAmBE,IAAXG,GAAwBJ,GAAmBI,EAASC,EAGvElE,KAAK+D,WAAaC,EAAIJ,EAAIG,gBAAYD,GACtC9D,KAAKmE,MAAQH,EAAIJ,EAAIO,MAAO,SAC5BnE,KAAKoE,OAASJ,EAAIJ,EAAIQ,OAAQ,SAC9BpE,KAAKqE,UAAYL,EAAIJ,EAAIS,WAAW,GACpCrE,KAAKsE,OAASN,EAAIJ,EAAIU,OAAQtB,EAAiBE,kBAC/ClD,KAAKuE,WAAaP,EAAIJ,EAAIW,WAAY,GACtCvE,KAAKwE,WAAaR,EAAIJ,EAAIY,WAAY,UACtCxE,KAAKyE,YAAcT,EAAIJ,EAAIa,aAAa,GAExCzE,KAAKuB,MAAQyC,EAAIJ,EAAIrC,OAAO,GAC5BvB,KAAK0E,aAAeV,EAAIJ,EAAIc,aAAc,IAC1C1E,KAAK2E,YAAcX,EAAIJ,EAAIe,aAAa,GACxC3E,KAAK4E,oBAAsBZ,EAAIJ,EAAIgB,qBAAqB,GACxD5E,KAAK6E,WAAab,EAAIJ,EAAIiB,YAAY,GACtC7E,KAAK8E,eAAiBd,EAAIJ,EAAIkB,eAAgBtC,EAAoBC,MAClEzC,KAAK+E,UAAYf,EAAIJ,EAAImB,UAAWlC,EAAoBC,OACxD9C,KAAKgF,cAAgBhB,EAAIJ,EAAIoB,eAAe,GAC5ChF,KAAKiF,sBAAwBjB,EAAIJ,EAAIqB,sBAAuB,KAC5DjF,KAAKkF,0BAA4BlB,EAAIJ,EAAIsB,2BAA2B,GACpElF,KAAKmF,kBAAoBnB,EAAIJ,EAAIuB,mBAAmB,GAChDvB,GAAOA,EAAIwB,cAAgBxB,EAAIwB,aAAaC,SAC5CzB,EAAIwB,aAAexB,EAAIwB,aAAarE,KAAI,SAAAwC,GAAU,OAAA,IAAI+B,EAAiB/B,OAE3EvD,KAAKoF,aAAepB,EAAIJ,EAAIwB,aAAc,IAC1CpF,KAAKuF,iBAAmBvB,EAAIJ,EAAI2B,kBAAkB,GAClDvF,KAAKwF,aAAexB,EAAIJ,EAAI4B,cAAc,GAE1CxF,KAAKyF,WAAazB,EAAIJ,EAAI6B,YAAY,GACtCzF,KAAK0F,kBAAoB1B,EAAIJ,EAAI8B,kBAAmB,GACpD1F,KAAK2F,eAAiB3B,EAAIJ,EAAI+B,eAAgB,GAC9C3F,KAAK4F,kBAAoB5B,EAAIJ,EAAIgC,kBAAmB,IACpD5F,KAAK6F,iBAAmB7B,EAAIJ,EAAIiC,iBAAkB,IAClD7F,KAAK8F,iBAAmB9B,EAAIJ,EAAIkC,kBAAkB,GAClD9F,KAAK+F,yBAA2B/B,EAAIJ,EAAImC,0BAA0B,GAClE/F,KAAKgG,gBAAkBhC,EAAIJ,EAAIoC,iBAAiB,GAChDhG,KAAKiG,mBAAqBjC,EAAIJ,EAAIqC,mBAAoB,GACtDjG,KAAKkG,gBAAkBlC,EAAIJ,EAAIsC,gBAAiB/C,EAAgBC,QAChEpD,KAAKmG,yBAA2BnC,EAAIJ,EAAIuC,0BAA0B,GAClEnG,KAAKoG,kBAAoBpC,EAAIJ,EAAIwC,mBAAmB,GACpDpG,KAAKqG,mBAAqBrC,EAAIJ,EAAIyC,oBAAoB,GACtDrG,KAAKsG,gBAAkBtC,EAAIJ,EAAI0C,gBAAiB,IAChDtG,KAAKuG,cAAgBvC,EAAIJ,EAAI2C,cAAe1D,EAAoBC,OAC5Dc,GAAOA,EAAI4C,kBAAoB5C,EAAI4C,iBAAiBnB,SACpDzB,EAAI4C,iBAAmB5C,EAAI4C,iBAAiBzF,KAAI,SAAAwC,GAAU,OAAA,IAAI+B,EAAiB/B,OAEnFvD,KAAKwG,iBAAmBxC,EAAIJ,EAAI4C,iBAAkB,IAElDxG,KAAKyG,QAAUzC,EAAIJ,EAAI6C,SAAS,GAChCzG,KAAK0G,mBAAqB1C,EAAIJ,EAAI8C,oBAAoB,GACtD1G,KAAK2G,cAAgB3C,EAAIJ,EAAI+C,eAAe,GAC5C3G,KAAK4G,sBAAwB5C,EAAIJ,EAAIgD,uBAAuB,GAC5D5G,KAAK6G,aAAe7C,EAAIJ,EAAIiD,cAAc,GAC1C7G,KAAK8G,kBAAoB9C,EAAIJ,EAAIkD,mBAAmB,GACpD9G,KAAK+G,uBAAyB/C,EAAIJ,EAAImD,wBAAwB,GAC9D/G,KAAKgH,oBAAsBhD,EAAIJ,EAAIoD,qBAAqB,GACxDhH,KAAKiH,kBAAoBjD,EAAIJ,EAAIqD,mBAAmB,GACpDjH,KAAKkH,0BAA4BlD,EAAIJ,EAAIsD,2BAA2B,GACpElH,KAAKmH,iBAAmBnD,EAAIJ,EAAIuD,kBAAkB,GAClDnH,KAAKoH,gBAAkBpD,EAAIJ,EAAIwD,iBAAiB,GAChDpH,KAAKqH,wBAA0BrD,EAAIJ,EAAIyD,wBAAyB,KAChErH,KAAKsH,4BAA8BtD,EAAIJ,EAAI0D,6BAA6B,GACxEtH,KAAKuH,oBAAsBvD,EAAIJ,EAAI2D,qBAAqB,GACxDvH,KAAKwH,YAAcxD,EAAIJ,EAAI4D,aAAa,GACxCxH,KAAKyH,gBAAkBzD,EAAIJ,EAAI6D,gBAAiB,IAChDzH,KAAK0H,eAAiB1D,EAAIJ,EAAI8D,eAAgB,GAC9C1H,KAAK2H,eAAiB3D,EAAIJ,EAAI+D,eAAgB,IAC9C3H,KAAK4H,cAAgB5D,EAAIJ,EAAIgE,eAAe,GAC5C5H,KAAK6H,gBAAkB7D,EAAIJ,EAAIiE,iBAAiB,GAChD7H,KAAK8H,cAAgB9D,EAAIJ,EAAIkE,mBAAehE,GAC5C9D,KAAK+H,eAAiB/D,EAAIJ,EAAImE,gBAAgB,GAE9C/H,KAAKgI,cAAgBhE,EAAIJ,EAAIoE,cAAe,2BAC5ChI,KAAKiI,cAAgBjE,EAAIJ,EAAIqE,cAAe,4BAC5CjI,KAAKkI,UAAYlE,EAAIJ,EAAIsE,UAAW,sBACpClI,KAAKmI,eAAiBnE,EAAIJ,EAAIuE,eAAgB,oBAC9CnI,KAAKoI,YAAcpE,EAAIJ,EAAIwE,YAAa,sCACxCpI,KAAKqI,WAAarE,EAAIJ,EAAIyE,WAAY,qBACtCrI,KAAKsI,YAActE,EAAIJ,EAAI0E,YAAa,sBACxCtI,KAAKuI,eAAiBvE,EAAIJ,EAAI2E,eAAgB,cAC9CvI,KAAKwI,gBAAkBxE,EAAIJ,EAAI4E,gBAAiB,gBAChDxI,KAAKyI,aAAezE,EAAIJ,EAAI6E,aAAc,2BAEtC7E,GAAOA,EAAI8E,SAAW9E,EAAI8E,QAAQrD,SAClCzB,EAAI8E,QAAU9E,EAAI8E,QAAQ3H,KAAI,SAAAwC,GAAU,OAAA,IAAI+B,EAAiB/B,OAEjEvD,KAAK0I,QAAU1E,EAAIJ,EAAI8E,QAAS,OC3OpC,SAAY9E,GACR5D,KAAK2I,IAAM/E,EAAI+E,IACf3I,KAAK4I,KAAOhF,EAAIgF,KAChB5I,KAAK6I,MAAQjF,EAAIiF,oBC4DrB,SAAAC,EAAoBC,EAAoCC,EAC5CC,EAAgDlJ,EAChDmJ,GAFQlJ,KAAA+I,aAAAA,EAAoC/I,KAAAgJ,WAAAA,EAC5ChJ,KAAAiJ,cAAAA,EAAgDjJ,KAAAD,SAAAA,EAChDC,KAAAkJ,kBAAAA,EA7DZlJ,KAAAmJ,aAAc,EACdnJ,KAAAoJ,aAAe,EACfpJ,KAAAqJ,YAAc,EACdrJ,KAAAsJ,UAAY,EACZtJ,KAAAuJ,SAAU,EACVvJ,KAAAwJ,YAAc,EACdxJ,KAAA6I,MAAQ,EAqCE7I,KAAAyJ,OAAS,IAAIC,EAAAA,aACb1J,KAAA2J,QAAU,IAAID,EAAAA,aACd1J,KAAA4J,eAAiB,IAAIF,EAAAA,aAIvB1J,KAAA6J,QAAS,EAET7J,KAAA8J,SAAW,EACX9J,KAAA+J,SAAW,EACX/J,KAAAgK,YAAc,EACdhK,KAAAiK,WAAa,EACbjK,KAAAkK,QAAS,SAQjBpB,EAAA3I,UAAAgK,SAAA,WACQnK,KAAKoK,QAAUpK,KAAKqK,iBACpBrK,KAAKoK,QAAS,IAItBtB,EAAA3I,UAAAmK,YAAA,SAAYC,GAAZ,IAAAC,EAAAxK,KACQuK,EAAe,OACfvK,KAAKiJ,cAAc7I,YAAYJ,KAAKyK,MAAOzK,KAAKgJ,WAChD,WAAW,WAAM,OAAAwB,EAAKE,cAAY,WAAM,OAAAF,EAAKG,eAIrD7B,EAAA3I,UAAAyK,YAAA,WACQ5K,KAAK6K,iBACL7K,KAAK6K,mBAIe/B,EAAA3I,UAAA2K,aAAA,WACpB9K,KAAKqK,iBAAmBrK,KAAKoK,SAC7BpK,KAAKoK,QAAS,IAIMtB,EAAA3I,UAAA4K,aAAA,WACpB/K,KAAKqK,gBAAkBrK,KAAKoK,SAC5BpK,KAAKoK,QAAS,IAItBtB,EAAA3I,UAAA6K,UAAA,SAAU3L,GACFW,KAAK6J,SACD7J,KAAKiL,qBACDjL,KAAKkL,eAAe7L,GACpBW,KAAK2K,WACE3K,KAAKmL,eAAe9L,IAC3BW,KAAK0K,YAGT1K,KAAKoL,YAAcpL,KAAKqL,cAAchM,IACtCW,KAAKsL,UAKjBxC,EAAA3I,UAAAoL,KAAA,SAAK1C,GAAL,IAAA2B,EAAAxK,KACIA,KAAKyJ,OAAO+B,OAEZxL,KAAK6I,MAAQA,EACb7I,KAAK6J,QAAS,EACd7J,KAAKyL,MAAK,GAENzL,KAAK0L,iBACL1L,KAAK2L,mBAGT3L,KAAK6K,gBAAkB7K,KAAKD,SAASc,OAAO,SAAU,WAAW,SAACxB,GAAM,OAAAmL,EAAKQ,UAAU3L,OAG3FyJ,EAAA3I,UAAAmL,MAAA,WACItL,KAAK6J,QAAS,EACd7J,KAAK4L,kBACL5L,KAAK2J,QAAQ6B,OAEbxL,KAAK6L,eAED7L,KAAK6K,iBACL7K,KAAK6K,mBAIb/B,EAAA3I,UAAA2L,gBAAA,WACQ9L,KAAK+L,UAAY/L,KAAKgM,sBACtBhM,KAAK6L,gBAIb/C,EAAA3I,UAAA8L,gBAAA,WACQjM,KAAK+L,UAAY/L,KAAKgM,sBACtBhM,KAAKkM,iBAIbpD,EAAA3I,UAAA+L,cAAA,WAAA,IAAA1B,EAAAxK,KACQA,KAAK+L,WACL/L,KAAK6L,eAEL7L,KAAKmM,MAAQC,YAAW,WACf5B,EAAKE,aACNF,EAAK3B,OAAS,EACd2B,EAAKE,cAEV1K,KAAKqM,oBAIhBvD,EAAA3I,UAAA0L,aAAA,WACQ7L,KAAKmM,OACLG,aAAatM,KAAKmM,QAI1BrD,EAAA3I,UAAAoM,YAAA,SAAY1D,GACR7I,KAAK6I,MAAQA,EACb7I,KAAKyL,QAGT3C,EAAA3I,UAAAuK,SAAA,WACI,QAAI1K,KAAKwM,gBACLxM,KAAK6I,QAED7I,KAAK6I,QAAU7I,KAAKyM,OAAOpH,SAC3BrF,KAAK6I,MAAQ,GAGjB7I,KAAKyL,QACE,IAMf3C,EAAA3I,UAAAwK,SAAA,WACQ3K,KAAK0M,gBACL1M,KAAK6I,QAED7I,KAAK6I,MAAQ,IACb7I,KAAK6I,MAAQ7I,KAAKyM,OAAOpH,OAAS,GAGtCrF,KAAKyL,SAIb3C,EAAA3I,UAAAqM,YAAA,WACI,OAAIxM,KAAKuJ,YAEEvJ,KAAKyM,WACLzM,KAAK2M,cAAgB3M,KAAK6I,MAAQ7I,KAAKyM,OAAOpH,OAAS,KAMtEyD,EAAA3I,UAAAuM,YAAA,WACI,OAAI1M,KAAKuJ,YAEEvJ,KAAKyM,WACLzM,KAAK2M,cAAgB3M,KAAK6I,MAAQ,KAMjDC,EAAA3I,UAAAwL,iBAAA,WACI,GAAI3L,KAAK4M,YAAc5M,KAAK0L,gBAAiB,CACzC,IAAMmB,EAAWC,SAEZD,EAAIE,mBAAsBF,EAAIG,sBAC3BH,EAAII,yBAA4BJ,EAAIK,oBAGxClN,KAAK4L,kBAFL5L,KAAKmN,mBAOjBrE,EAAA3I,UAAAiN,WAAA,SAAW7L,GACP,MAA+B,eAAxBA,EAAMM,OAAO,EAAG,IACnBN,EAAQvB,KAAK+I,aAAasE,uBAAuB9L,IAGzDuH,EAAA3I,UAAAuB,YAAA,SAAaC,GACT,OAAO3B,KAAKiJ,cAAcvH,YAAYC,IAG1CmH,EAAA3I,UAAAmN,OAAA,WACQtN,KAAKuN,cACLvN,KAAKsJ,WAAatJ,KAAKwN,SAEnBxN,KAAKsJ,UAAYtJ,KAAKyN,UACtBzN,KAAKsJ,UAAYtJ,KAAKyN,WAKlC3E,EAAA3I,UAAAuN,QAAA,WACQ1N,KAAK2N,eACL3N,KAAKsJ,WAAatJ,KAAKwN,SAEnBxN,KAAKsJ,UAAYtJ,KAAK4N,UACtB5N,KAAKsJ,UAAYtJ,KAAK4N,SAGtB5N,KAAKsJ,WAAa,GAClBtJ,KAAK6N,kBAKjB/E,EAAA3I,UAAA2N,WAAA,WACI9N,KAAKwJ,aAAe,IAGxBV,EAAA3I,UAAA4N,YAAA,WACI/N,KAAKwJ,aAAe,IAGxBV,EAAA3I,UAAA6N,aAAA,WACI,OAAOhO,KAAK+I,aAAakF,yBAAyB,SAAWjO,KAAKsJ,UAAY,YAActJ,KAAKwJ,YAAc,SAGnHV,EAAA3I,UAAAoN,UAAA,WACI,OAAOvN,KAAKsJ,UAAYtJ,KAAKyN,SAGjC3E,EAAA3I,UAAAwN,WAAA,WACI,OAAO3N,KAAKsJ,UAAYtJ,KAAK4N,SAGjC9E,EAAA3I,UAAA+N,cAAA,WACI,OAAOlO,KAAKmO,MAAQnO,KAAKsJ,UAAY,GAGzCR,EAAA3I,UAAAiO,iBAAA,SAAiB/O,GACTW,KAAKkO,kBACLlO,KAAK8J,SAAW9J,KAAKqO,WAAWhP,GAChCW,KAAK+J,SAAW/J,KAAKsO,WAAWjP,GAChCW,KAAKgK,YAAchK,KAAKoJ,aACxBpJ,KAAKiK,WAAajK,KAAKqJ,YACvBrJ,KAAKkK,QAAS,EAEd7K,EAAEkP,mBAIVzF,EAAA3I,UAAAqO,eAAA,SAAenP,GACXW,KAAKkK,QAAS,GAGlBpB,EAAA3I,UAAAsO,iBAAA,SAAiBpP,GACTW,KAAKkK,SACLlK,KAAKoJ,aAAepJ,KAAKgK,aAAehK,KAAKqO,WAAWhP,GAAKW,KAAK8J,UAClE9J,KAAKqJ,YAAcrJ,KAAKiK,YAAcjK,KAAKsO,WAAWjP,GAAKW,KAAK+J,YAIhEjB,EAAA3I,UAAAkO,WAAA,SAAWhP,GACf,OAAOA,EAAEqP,SAAWrP,EAAEqP,QAAQrJ,OAAShG,EAAEqP,QAAQ,GAAGC,QAAUtP,EAAEsP,SAG5D7F,EAAA3I,UAAAmO,WAAA,SAAWjP,GACf,OAAOA,EAAEqP,SAAWrP,EAAEqP,QAAQrJ,OAAShG,EAAEqP,QAAQ,GAAGE,QAAUvP,EAAEuP,SAG5D9F,EAAA3I,UAAA0N,cAAA,WACA7N,KAAKmO,OACLnO,KAAKoJ,aAAe,EACpBpJ,KAAKqJ,YAAc,IAInBP,EAAA3I,UAAAgL,eAAA,SAAe9L,GACnB,OAAqB,KAAdA,EAAEwP,SAGL/F,EAAA3I,UAAA+K,eAAA,SAAe7L,GACnB,OAAqB,KAAdA,EAAEwP,SAGL/F,EAAA3I,UAAAkL,cAAA,SAAchM,GAClB,OAAqB,KAAdA,EAAEwP,SAGL/F,EAAA3I,UAAAgN,eAAA,WACJ,IAAM7M,EAAewM,SAASgC,gBAE1BxO,EAAQyO,kBACRzO,EAAQyO,oBACDzO,EAAQ0O,oBACf1O,EAAQ0O,sBACD1O,EAAQ2O,qBACf3O,EAAQ2O,uBACD3O,EAAQ4O,yBACf5O,EAAQ4O,2BAIRpG,EAAA3I,UAAAyL,gBAAA,WACJ,GAAI5L,KAAKmP,eAAgB,CACrB,IAAMtC,EAAWC,SAEbD,EAAIuC,eACJvC,EAAIuC,iBACGvC,EAAIwC,iBACXxC,EAAIwC,mBACGxC,EAAIyC,oBACXzC,EAAIyC,sBACGzC,EAAI0C,sBACX1C,EAAI0C,yBAKRzG,EAAA3I,UAAAgP,aAAA,WACJ,IAAMtC,EAAWC,SAEjB,OAAOD,EAAIE,mBAAqBF,EAAII,yBAC7BJ,EAAIG,sBAAwBH,EAAIK,qBAKnCpE,EAAA3I,UAAAsL,KAAA,SAAK+D,GAAL,IAAAhF,EAAAxK,UAAK,IAAAwP,IAAAA,GAAA,GACTxP,KAAKuJ,SAAU,EACfvJ,KAAK6L,eAEL7L,KAAK4J,eAAe4B,KAAKxL,KAAK6I,OAE1B2G,IAAUxP,KAAKyP,UACfzP,KAAK0P,QAELtD,YAAW,WAAM,OAAA5B,EAAKkF,UAAS,MAI/B5G,EAAA3I,UAAAuP,MAAA,WAAA,IAAAlF,EAAAxK,KACJA,KAAKsJ,UAAY,EACjBtJ,KAAKwJ,YAAc,EACnBxJ,KAAK6N,gBAEL7N,KAAK2I,IAAM3I,KAAKoN,WAAmBpN,KAAKyM,OAAOzM,KAAK6I,QACpD7I,KAAK4I,KAAO5I,KAAK0B,YAAoB1B,KAAKyM,OAAOzM,KAAK6I,QACtD7I,KAAK2P,SAAW3P,KAAK6I,MACrB7I,KAAK4P,YAAc5P,KAAK6P,aAAa7P,KAAK6I,OAC1C7I,KAAKkJ,kBAAkB4G,eAEvB1D,YAAW,WACH5B,EAAKuF,SAASvF,EAAKwF,aAAalP,gBAA+B,SAAb0J,EAAK5B,MACvD4B,EAAKjB,SAAU,EACfiB,EAAK0B,gBACL1B,EAAKtB,kBAAkB4G,gBACH,SAAbtF,EAAK5B,OAGZwD,YAAW,WACH5B,EAAKjB,UACLiB,EAAKrB,aAAc,EACnBqB,EAAKtB,kBAAkB4G,mBAI/BtF,EAAKwF,aAAalP,cAAcmP,OAAS,WACrCzF,EAAKjB,SAAU,EACfiB,EAAKrB,aAAc,EACnBqB,EAAKwF,aAAalP,cAAcmP,OAAS,KACzCzF,EAAK0B,gBACL1B,EAAKtB,kBAAkB4G,qBAM/BhH,EAAA3I,UAAA4P,SAAA,SAASG,GACb,QAAKA,EAAIC,gBAIuB,IAArBD,EAAIE,cAAqD,IAArBF,EAAIE,wCA3b1DC,EAAAA,UAASC,KAAA,CAAC,CACPC,SAAU,sBACVC,SAAA,qzKAPsBC,EAAAA,oBAD4EC,EAAAA,kBAI7F5Q,SAJkIyC,EAAAA,iBAAlIoO,EAAAA,qDAyBJC,EAAAA,4BACAA,EAAAA,+BACAA,EAAAA,sBACAA,EAAAA,8BACAA,EAAAA,qBACAA,EAAAA,0BACAA,EAAAA,+BACAA,EAAAA,4BACAA,EAAAA,0BACAA,EAAAA,kCACAA,EAAAA,6BACAA,EAAAA,6BACAA,EAAAA,yBACAA,EAAAA,8BACAA,EAAAA,2BACAA,EAAAA,wBACAA,EAAAA,gCACAA,EAAAA,oCACAA,EAAAA,4BACAA,EAAAA,oBACAA,EAAAA,wBACAA,EAAAA,uBACAA,EAAAA,uBACAA,EAAAA,0BACAA,EAAAA,2BACAA,EAAAA,yBACAA,EAAAA,uBACAA,EAAAA,sBACAA,EAAAA,8BACAA,EAAAA,+BACAA,EAAAA,wBACAA,EAAAA,4BACAA,EAAAA,uBACAA,EAAAA,sBAEAC,EAAAA,wBACAA,EAAAA,+BACAA,EAAAA,6BAEAC,EAAAA,UAASR,KAAA,CAAC,sCAmCVS,EAAAA,aAAYT,KAAA,CAAC,oCAMbS,EAAAA,aAAYT,KAAA,CAAC,kCCjEd,SAAAU,EAAoBjI,EACRC,EAAgCC,GADxBjJ,KAAA+I,aAAAA,EACR/I,KAAAgJ,WAAAA,EAAgChJ,KAAAiJ,cAAAA,EARlCjJ,KAAA2D,QAAU,IAAI+F,EAAAA,aACd1J,KAAA4J,eAAiB,IAAIF,EAAAA,aAE/B1J,KAAAiR,gBAAiB,SAOjBD,EAAA7Q,UAAAgK,SAAA,WACQnK,KAAKoK,QAAUpK,KAAKqK,iBACpBrK,KAAKoK,QAAS,GAGdpK,KAAK+L,UACL/L,KAAKkM,iBAIb8E,EAAA7Q,UAAAmK,YAAA,SAAYC,GAAZ,IAAAC,EAAAxK,KACQuK,EAAe,OACfvK,KAAKiJ,cAAc7I,YAAYJ,KAAKyK,MAAOzK,KAAKgJ,WAAY,SAAS,WAAM,OAAAwB,EAAKE,cAAY,WAAM,OAAAF,EAAKG,eAInFqG,EAAA7Q,UAAA2K,aAAA,WACpB9K,KAAKqK,iBAAmBrK,KAAKoK,SAC7BpK,KAAKoK,QAAS,GAGdpK,KAAK+L,UAAY/L,KAAKgM,sBACtBhM,KAAK6L,gBAIemF,EAAA7Q,UAAA4K,aAAA,WACpB/K,KAAKqK,gBAAkBrK,KAAKoK,SAC5BpK,KAAKoK,QAAS,GAGdpK,KAAK+L,UAAY/L,KAAKgM,sBACtBhM,KAAKkM,iBAIb8E,EAAA7Q,UAAA+Q,MAAA,SAAMrI,GACF7I,KAAKmR,cAAgBtI,GAGzBmI,EAAA7Q,UAAAiR,UAAA,WACI,IAAKpR,KAAKyM,OACN,MAAO,GAGX,GAAIzM,KAAKyE,YAAa,CAClB,IAAI4M,EAAU,CAACrR,KAAKmR,eAChBG,EAAYtR,KAAKmR,cAAgB,GAElB,IAAfG,GAAoBtR,KAAK2M,aACzB0E,EAAQ1R,KAAKK,KAAKyM,OAAOpH,OAAS,GAC3BiM,GAAa,GACpBD,EAAQ1R,KAAK2R,GAGjB,IAAIC,EAAYvR,KAAKmR,cAAgB,EAQrC,OANII,GAAavR,KAAKyM,OAAOpH,QAAUrF,KAAK2M,aACxC0E,EAAQ1R,KAAK,GACN4R,EAAYvR,KAAKyM,OAAOpH,QAC/BgM,EAAQ1R,KAAK4R,GAGVvR,KAAKyM,OAAO+E,QAAO,SAACtB,EAAK5Q,GAAM,OAAuB,GAAvB+R,EAAQrP,QAAQ1C,MAEtD,OAAOU,KAAKyM,QAIpBuE,EAAA7Q,UAAA+L,cAAA,WAAA,IAAA1B,EAAAxK,KACIA,KAAK6L,eAEL7L,KAAKmM,MAAQsF,aAAY,WAChBjH,EAAKE,aACNF,EAAK2G,eAAiB,EACtB3G,EAAKE,cAEV1K,KAAKqM,mBAGZ2E,EAAA7Q,UAAA0L,aAAA,WACQ7L,KAAKmM,OACLuF,cAAc1R,KAAKmM,QAI3B6E,EAAA7Q,UAAAwR,YAAA,SAAYC,EAAc/I,GAClB7I,KAAK6R,YACL7R,KAAK2D,QAAQ6H,KAAK3C,GAElB+I,EAAME,kBACNF,EAAMrD,mBAIdyC,EAAA7Q,UAAAsL,KAAA,SAAK5C,GACD7I,KAAKmR,cAAgBtI,EACrB7I,KAAK4J,eAAe4B,KAAKxL,KAAKmR,eAC9BnR,KAAK+R,oBAGTf,EAAA7Q,UAAAuK,SAAA,WACI,SAAI1K,KAAKwM,gBAAiBxM,KAAKiR,kBAC3BjR,KAAKmR,gBAEDnR,KAAKmR,gBAAkBnR,KAAKyM,OAAOpH,SACnCrF,KAAKmR,cAAgB,GAGzBnR,KAAK4J,eAAe4B,KAAKxL,KAAKmR,eAC9BnR,KAAK+R,oBAEE,IAMff,EAAA7Q,UAAAwK,SAAA,WACQ3K,KAAK0M,eAAiB1M,KAAKiR,iBAC3BjR,KAAKmR,gBAEDnR,KAAKmR,cAAgB,IACrBnR,KAAKmR,cAAgBnR,KAAKyM,OAAOpH,OAAS,GAG9CrF,KAAK4J,eAAe4B,KAAKxL,KAAKmR,eAC9BnR,KAAK+R,qBAIbf,EAAA7Q,UAAA4R,iBAAA,WAAA,IAAAvH,EAAAxK,KACIA,KAAKiR,gBAAiB,EACtB,IAAIe,EAAU,IAEVhS,KAAKyP,YAAcjN,EAAoBE,OACpC1C,KAAKyP,YAAcjN,EAAoBC,OAC1CuP,EAAU,KAGd5F,YAAW,WACP5B,EAAKyG,gBAAiB,IACvBe,IAGPhB,EAAA7Q,UAAAqM,YAAA,WACI,QAAIxM,KAAKyM,WACEzM,KAAK2M,cAAgB3M,KAAKmR,cAAgBnR,KAAKyM,OAAOpH,OAAS,IAO9E2L,EAAA7Q,UAAAuM,YAAA,WACI,QAAI1M,KAAKyM,WACEzM,KAAK2M,cAAgB3M,KAAKmR,cAAgB,IAMzDH,EAAA7Q,UAAAiN,WAAA,SAAW7L,GACP,OAAOvB,KAAK+I,aAAakF,yBAAyBjO,KAAKiJ,cAAc3H,iBAAiBC,KAG1FyP,EAAA7Q,UAAAuB,YAAA,SAAYC,GACR,OAAO3B,KAAKiJ,cAAcvH,YAAYC,6BA3M7C0O,EAAAA,UAASC,KAAA,CAAC,CACPC,SAAU,oBACVC,SAAA,8nIARKC,EAAAA,oBADsDC,EAAAA,kBAEtD5Q,qCAWJ8Q,EAAAA,yBACAA,EAAAA,6BACAA,EAAAA,sBACAA,EAAAA,8BACAA,EAAAA,qBACAA,EAAAA,yBACAA,EAAAA,oBACAA,EAAAA,6BACAA,EAAAA,6BACAA,EAAAA,wBACAA,EAAAA,gCACAA,EAAAA,oCACAA,EAAAA,4BACAA,EAAAA,2BACAA,EAAAA,uBACAA,EAAAA,4BACAA,EAAAA,+BACAA,EAAAA,uBACAA,EAAAA,uBAEAC,EAAAA,+BACAA,EAAAA,6BAyBAE,EAAAA,aAAYT,KAAA,CAAC,oCAUbS,EAAAA,aAAYT,KAAA,CAAC,kCCxBd,SAAA2B,EAAoBlJ,EAAoCC,EAC5CC,GADQjJ,KAAA+I,aAAAA,EAAoC/I,KAAAgJ,WAAAA,EAC5ChJ,KAAAiJ,cAAAA,EA5BZjJ,KAAAkS,aAAe,EAuBLlS,KAAA4J,eAAiB,IAAIF,EAAAA,aAEvB1J,KAAA6I,MAAQ,SAKhBoJ,EAAA9R,UAAAmK,YAAA,SAAYC,GAAZ,IAAAC,EAAAxK,KACQuK,EAAuB,eACvBvK,KAAKmS,gBAGL5H,EAAe,OACfvK,KAAKiJ,cAAc7I,YAAYJ,KAAKyK,MAAOzK,KAAKgJ,WAC5C,cAAc,WAAM,OAAAwB,EAAK4H,eAAa,WAAM,OAAA5H,EAAK6H,cAGrDrS,KAAKyM,SACLzM,KAAKsS,oBAAsBtS,KAAKyM,OAAOpH,OAAUrF,KAAKuS,KAAOvS,KAAKwS,UAI9CP,EAAA9R,UAAA2K,aAAA,WACxB9K,KAAKyS,YAAa,GAGMR,EAAA9R,UAAA4K,aAAA,WACxB/K,KAAKyS,YAAa,GAGtBR,EAAA9R,UAAA+Q,MAAA,SAAMrI,GACF7I,KAAKmR,cAAgBtI,EACrB7I,KAAK0S,qBAEL1S,KAAK6I,MAAQ,EACb7I,KAAKmS,iBAGTF,EAAA9R,UAAAiR,UAAA,WACI,IAAKpR,KAAKyM,OACN,MAAO,GAGX,GAAIzM,KAAK2S,eACL,OAAO3S,KAAKyM,OAAOmG,MAAM,EAAG5S,KAAKuS,KAAOvS,KAAKwS,SAE5C,GAAIxS,KAAKyE,aAAezE,KAAK6S,OAAS1P,EAAgBE,IAAK,CAC5D,IAAIyP,EAAY,EAehB,OAbI9S,KAAK6S,QAAU1P,EAAgBC,OAC/B0P,GAAa9S,KAAK6I,MAAQ7I,KAAKwS,QAAUxS,KAAK+S,UAAY/S,KAAKuS,KAE1DvS,KAAK6S,QAAU1P,EAAgBG,OACpCwP,EAAY9S,KAAK6I,MAAU7I,KAAKwS,QAAUxS,KAAKuS,KAAQ,GAGvDO,GAAa9S,KAAKkS,aAClBY,EAAY9S,KAAKkS,aAEjBlS,KAAKkS,aAAeY,EAGjB9S,KAAKyM,OAAOmG,MAAM,EAAGE,GAG5B,OAAO9S,KAAKyM,QAIpBwF,EAAA9R,UAAAwR,YAAA,SAAYC,EAAc/I,GACjB7I,KAAKgT,QAAQnK,KACd7I,KAAKmR,cAAgBtI,EACrB7I,KAAK4J,eAAe4B,KAAK3C,GAEzB+I,EAAME,kBACNF,EAAMrD,mBAId0D,EAAA9R,UAAA6S,QAAA,SAAQnK,GACJ,GAAI7I,KAAKiT,OAASjT,KAAKiT,MAAM5N,QAAUrF,KAAKiT,MAAMpK,GAAQ,OAAO,GAGrEoJ,EAAA9R,UAAAiS,UAAA,WACI,GAAIpS,KAAKkT,eAAgB,CACrBlT,KAAK6I,OAAS7I,KAAK+S,SACnB,IAAII,EAAWnT,KAAKoT,cAAgBpT,KAAKwS,QAErCxS,KAAK6I,MAAQsK,IACbnT,KAAK6I,MAAQsK,GAGjBnT,KAAKqT,0BAIbpB,EAAA9R,UAAAkS,SAAA,WACQrS,KAAKsT,gBACLtT,KAAK6I,OAAS7I,KAAK+S,SAEf/S,KAAK6I,MAAQ,IACb7I,KAAK6I,MAAQ,GAGjB7I,KAAKqT,0BAIbpB,EAAA9R,UAAA+S,aAAA,WACI,OAAOlT,KAAK6I,MAAQ7I,KAAKwS,QAAUxS,KAAKoT,eAG5CnB,EAAA9R,UAAAmT,YAAA,WACI,OAAsB,IAAftT,KAAK6I,OAGhBoJ,EAAA9R,UAAAoT,iBAAA,SAAiB1K,GACb,IAAI2K,EAeJ,OAZIA,EADAxT,KAAK6S,QAAU1P,EAAgBC,OACbtB,KAAK2R,MAAM5K,EAAQ7I,KAAKuS,MAErCvS,KAAK6S,QAAU1P,EAAgBG,KACjBuF,EAAQ7I,KAAKwS,QAAY1Q,KAAK2R,MAAM5K,GAAS7I,KAAKuS,KAAOvS,KAAKwS,UAAYxS,KAAKwS,QAE7FxS,KAAK6S,OAAS1P,EAAgBE,KAAOrD,KAAK2S,eAC7B9J,EAAQ7I,KAAKwS,QAGb3J,EAAQ/G,KAAK4R,KAAK1T,KAAKyM,OAAOpH,OAASrF,KAAKuS,MAG3DvS,KAAK2T,qBAAqBH,EAAiBxT,KAAKwS,UAG3DP,EAAA9R,UAAAyT,gBAAA,SAAgB/K,GACZ,IAAI2K,EAeJ,OAZIA,EADAxT,KAAK6S,QAAU1P,EAAgBC,OACbyF,EAAQ7I,KAAKuS,KAE1BvS,KAAK6S,QAAU1P,EAAgBG,KAClBxB,KAAK2R,MAAM5K,EAAQ7I,KAAKwS,SAAY1Q,KAAK2R,MAAM5K,GAAS7I,KAAKuS,KAAOvS,KAAKwS,UAAYxS,KAAKuS,KAEvGvS,KAAK6S,OAAS1P,EAAgBE,KAAOrD,KAAK2S,eAC7B7Q,KAAK2R,MAAM5K,EAAQ7I,KAAKwS,SAGxB1Q,KAAK2R,MAAM5K,EAAQ/G,KAAK4R,KAAK1T,KAAKyM,OAAOpH,OAASrF,KAAKuS,OAGtEvS,KAAK2T,qBAAqBH,EAAiBxT,KAAKuS,OAG3DN,EAAA9R,UAAA0T,kBAAA,WACI,OAAO7T,KAAK8T,sBAAsB9T,KAAKwS,UAG3CP,EAAA9R,UAAA4T,mBAAA,WACI,OAAO/T,KAAK8T,sBAAsB9T,KAAKuS,OAG3CN,EAAA9R,UAAAkT,sBAAA,WACIrT,KAAKgU,gBAAqB,IAAMhU,KAAKwS,QAAWxS,KAAK6I,MAAS,IAE9D7I,KAAKiU,uBAA2BjU,KAAKkU,QAAYlU,KAAKwS,QAAU,GAC1DxS,KAAKkU,OAAUlU,KAAKwS,SAAYxS,KAAK6I,MAAS,MAGxDoJ,EAAA9R,UAAAuS,mBAAA,WACI1S,KAAKgU,eAAiB,MACtBhU,KAAKiU,qBAAuB,OAGhChC,EAAA9R,UAAAgU,cAAA,WACI,OAAInU,KAAK2S,oBAEE3S,KAAKoK,QAAUpK,KAAKyM,QAAUzM,KAAKyM,OAAOpH,OAASrF,KAAKoU,oBAC1DpU,KAAKqK,iBAAkBrK,KAAKyS,aAOzCR,EAAA9R,UAAAgS,cAAA,WACI,GAAInS,KAAKyM,OAAQ,CACb,IAAI4H,OAAQ,EAYZ,GATIA,EADArU,KAAK6S,QAAU1P,EAAgBC,OACpBtB,KAAK2R,MAAMzT,KAAKmR,cAAgBnR,KAAKuS,MAErCvS,KAAKmR,cAAgBrP,KAAK4R,KAAK1T,KAAKyM,OAAOpH,OAASrF,KAAKuS,MAGpEvS,KAAK2S,iBACL0B,EAAW,GAGXA,EAAWrU,KAAK6I,OAASwL,GAAYrU,KAAK6I,MAAQ7I,KAAKwS,QAAS,CAChE,IAAMW,EAAWnT,KAAKoT,cAAgBpT,KAAKwS,QAC3CxS,KAAK6I,MAAQwL,EAAWlB,EAAWA,EAAWkB,EAE9CrU,KAAKqT,2BAKjBpB,EAAA9R,UAAAiN,WAAA,SAAW7L,GACP,OAAOvB,KAAK+I,aAAakF,yBAAyBjO,KAAKiJ,cAAc3H,iBAAiBC,KAGlF0Q,EAAA9R,UAAAwT,qBAAA,SAAqB9K,EAAeyL,GACxC,OAAOtU,KAAKuU,aAAa,QAAY,IAAMD,EAASzL,EAAS,QACrD7I,KAAKkU,QAAYI,EAAQ,GAAKtU,KAAKkU,OAAUI,GAAUzL,EAAS,QAGpEoJ,EAAA9R,UAAA2T,sBAAA,SAAsBQ,GAC1B,OAAoB,IAAhBtU,KAAKkU,OACElU,KAAKuU,aAAa,QAAW,IAAMD,EAAS,QAC1CA,EAAQ,GAAKtU,KAAKkU,OAAUI,EAAS,OAEvCtU,KAAKuU,aAAa,QAAW,IAAMD,EAAS,aAInDrC,EAAA9R,UAAAiT,YAAA,WACJ,GAAIpT,KAAK6S,OAAS1P,EAAgBG,KAAM,CACpC,IAAI6P,EAAYrR,KAAK2R,MAAMzT,KAAKyM,OAAOpH,OAASrF,KAAKoU,mBAAqBpU,KAAKwS,QAS/E,OAPIxS,KAAKyM,OAAOpH,OAASrF,KAAKoU,kBAAoBpU,KAAKwS,QACnDW,GAAYnT,KAAKwS,QAGjBW,GAAYnT,KAAKyM,OAAOpH,OAASrF,KAAKoU,kBAGnCjB,EAGP,OAAOrR,KAAK4R,KAAK1T,KAAKyM,OAAOpH,OAASrF,KAAKuS,OAI3CN,EAAA9R,UAAAiU,gBAAA,WACJ,OAAOpU,KAAKwS,QAAUxS,KAAKuS,MAGvBN,EAAA9R,UAAAoU,aAAA,SAAa3U,GACjB,OAAOI,KAAK+I,aAAakF,yBAAyBrO,IAGtDqS,EAAA9R,UAAAuB,YAAA,SAAYC,GACR,OAAO3B,KAAKiJ,cAAcvH,YAAYC,6BAhS7C0O,EAAAA,UAASC,KAAA,CAAC,CACPC,SAAU,yBACVC,SAAA,07HAPsBC,EAAAA,oBADkCC,EAAAA,kBAGnD5Q,qCAiBJ8Q,EAAAA,qBACAA,EAAAA,sBACAA,EAAAA,0BACAA,EAAAA,uBACAA,EAAAA,oBACAA,EAAAA,sBACAA,EAAAA,8BACAA,EAAAA,sBACAA,EAAAA,6BACAA,EAAAA,yBACAA,EAAAA,qBACAA,EAAAA,oBACAA,EAAAA,6BACAA,EAAAA,6BACAA,EAAAA,wBACAA,EAAAA,qBACAA,EAAAA,8BACAA,EAAAA,2BACAA,EAAAA,uBACAA,EAAAA,8BAEAC,EAAAA,6BAsBAE,EAAAA,aAAYT,KAAA,CAAC,oCAIbS,EAAAA,aAAYT,KAAA,CAAC,kCCNd,SAAAkE,EAAoBC,EAA+BxL,GAA/BjJ,KAAAyU,UAAAA,EAA+BzU,KAAAiJ,cAAAA,EAjCzCjJ,KAAA0U,YAAc,IAAIhL,EAAAA,aAClB1J,KAAA2U,OAAS,IAAIjL,EAAAA,aACb1J,KAAA4U,YAAc,IAAIlL,EAAAA,aAClB1J,KAAA6U,aAAe,IAAInL,EAAAA,aACnB1J,KAAA8U,cAAgB,IAAIpL,EAAAA,aAU9B1J,KAAA+U,gBAAkB,EAElB/U,KAAAmR,cAAgB,EAKRnR,KAAA+D,gBAAiCD,EACjC9D,KAAAgV,oBAAqClR,SAa7C0Q,EAAArU,UAAAgK,SAAA,WACwBrG,MAAhB9D,KAAKiV,UACLjV,KAAKiV,QAAUjV,KAAKiV,QAAQlU,KAAI,SAACmU,GAAQ,OAAA,IAAIC,EAAkBD,OAEnElV,KAAKoV,cACLpV,KAAKqV,gBACLrV,KAAKsV,aACLtV,KAAKuV,iBACDvV,KAAKwV,iBACLxV,KAAKmR,cAAwBnR,KAAKwV,eAAejR,aAIzDiQ,EAAArU,UAAAsV,UAAA,iBACwB3R,IAAhB9D,KAAKyM,QAAyBzM,KAAKyM,OAAOpH,SAAWrF,KAAK+U,iBACtD/U,KAAKyM,SAAWzM,KAAK0V,aACzB1V,KAAK+U,gBAAkB/U,KAAKyM,OAAOpH,OACnCrF,KAAK0V,UAAY1V,KAAKyM,OACtBzM,KAAKsV,aACLtV,KAAK2V,YAED3V,KAAKyM,QAAUzM,KAAKyM,OAAOpH,QAC3BrF,KAAK0U,YAAYlJ,OAGjBxL,KAAKuB,OACLvB,KAAKuB,MAAM2P,MAAclR,KAAKwV,eAAejR,YAG7CvE,KAAKwV,eAAenP,oBAAsBrG,KAAKwV,eAAe/P,YAC3DzF,KAAKyM,OAAOpH,QAAU,IACzBrF,KAAKwV,eAAe/P,YAAa,EACjCzF,KAAKwV,eAAe7Q,aAAc,GAGtC3E,KAAK4V,oBAIbpB,EAAArU,UAAA0V,gBAAA,WACI7V,KAAKuV,kBAGsBf,EAAArU,UAAA2V,SAAA,WAAA,IAAAC,EAAA/V,KAC3BA,KAAKqV,gBAEDrV,KAAKgV,iBAAmBhV,KAAK+D,aAC7B/D,KAAKsV,aACLtV,KAAK4V,mBAGL5V,KAAKwV,gBAAkBxV,KAAKwV,eAAenR,YAEvCrE,KAAKgW,kBACL1J,aAAatM,KAAKgW,kBAGtBhW,KAAKgW,iBAAmB5J,YAAW,WAC/B2J,EAAKR,mBACN,OAIXf,EAAArU,UAAA8V,eAAA,WACI,OAAQjW,KAAKwV,gBAAkBxV,KAAKwV,eAAe/P,WAC/CzF,KAAKwV,eAAe9Q,aAAe,IAAM,QAGjD8P,EAAArU,UAAA+V,oBAAA,WACI,OAAIlW,KAAKwV,gBAAkBxV,KAAKwV,eAAejU,MACpC,QAAUvB,KAAKwV,eAAe5P,kBAAoB,OACnD5F,KAAKwV,eAAe3P,iBAAmB,MAEtC,QAIf2O,EAAArU,UAAAgW,uBAAA,WACI,OAAInW,KAAKwV,gBAAkBxV,KAAKwV,eAAelR,SAAWtB,EAAiBE,iBAChElD,KAAKwV,eAAe3P,iBAAmB,KAEvC,OAIf2O,EAAArU,UAAAiW,0BAAA,WACI,OAAIpW,KAAKwV,gBAAkBxV,KAAKwV,eAAelR,SAAWtB,EAAiBC,cAChEjD,KAAKwV,eAAe3P,iBAAmB,KAEvC,OAIf2O,EAAArU,UAAAkW,YAAA,SAAYxN,GACJ7I,KAAKwV,eAAe1N,cACpB9H,KAAKwV,eAAe1N,cAAce,IAElC7I,KAAKsW,gBAAiB,EACtBtW,KAAKyG,QAAQ8E,KAAK1C,KAI1B2L,EAAArU,UAAAoW,cAAA,WACIvW,KAAK4U,YAAYpJ,OAEbxL,KAAKuB,OAASvB,KAAKuB,MAAMwK,UACzB/L,KAAKuB,MAAMsK,gBAInB2I,EAAArU,UAAAqW,eAAA,WACIxW,KAAKsW,gBAAiB,EACtBtW,KAAK6U,aAAarJ,OAEdxL,KAAKuB,OAASvB,KAAKuB,MAAMwK,UACzB/L,KAAKuB,MAAM2K,iBAInBsI,EAAArU,UAAAsW,gBAAA,SAAgB5N,GACZ7I,KAAK0W,OAAO7N,IAGhB2L,EAAArU,UAAAwW,qBAAA,SAAqB9N,GACjB7I,KAAK0W,OAAO7N,GAER7I,KAAKwV,gBAAkBxV,KAAKwV,eAAe/P,YAAczF,KAAKwV,eAAe/O,WACxEzG,KAAKwV,eAAejU,OAASvB,KAAKwV,eAAerP,2BACtDnG,KAAKqW,YAAYrW,KAAKmR,gBAI9BqD,EAAArU,UAAAsL,KAAA,SAAK5C,GACD7I,KAAK0W,OAAO7N,IAGhB2L,EAAArU,UAAAuK,SAAA,WACI1K,KAAKuB,MAAMmJ,YAGf8J,EAAArU,UAAAwK,SAAA,WACI3K,KAAKuB,MAAMoJ,YAGf6J,EAAArU,UAAAqM,YAAA,WACI,SAAIxM,KAAKyM,SAAUzM,KAAKwV,oBACZxV,KAAKwV,eAAerQ,mBAAqBnF,KAAKmR,cAAgBnR,KAAKyM,OAAOpH,OAAS,IAOnGmP,EAAArU,UAAAuM,YAAA,WACI,SAAI1M,KAAKyM,SAAUzM,KAAKwV,oBACZxV,KAAKwV,eAAerQ,mBAAqBnF,KAAKmR,cAAgB,IAM9EqD,EAAArU,UAAAyW,cAAA,SAAc/N,GACV7I,KAAK8U,cAActJ,KAAK,CAAE3C,MAAKA,EAAEtH,MAAOvB,KAAKyM,OAAO5D,MAGxD2L,EAAArU,UAAA0W,oBAAA,WACI7W,KAAK8W,WAAW1E,aAGpBoC,EAAArU,UAAA4W,mBAAA,WACI/W,KAAK8W,WAAWzE,YAGpBmC,EAAArU,UAAA6W,uBAAA,WACI,OAAOhX,KAAK8W,WAAW5D,gBAG3BsB,EAAArU,UAAA8W,sBAAA,WACI,OAAOjX,KAAK8W,WAAWxD,eAGnBkB,EAAArU,UAAAyV,gBAAA,WACA5V,KAAK8W,YACL9W,KAAK8W,WAAW5F,MAAclR,KAAKwV,eAAejR,aAIlDiQ,EAAArU,UAAAuW,OAAA,SAAO7N,GACX7I,KAAKmR,cAAgBtI,EAErB7I,KAAK2U,OAAOnJ,KAAK,CACb3C,MAAKA,EACLtH,MAAOvB,KAAKyM,OAAO5D,MAInB2L,EAAArU,UAAAoV,eAAA,WACAvV,KAAKwV,gBAAkBxV,KAAKwV,eAAenR,YAC3CrE,KAAKmE,MAAQ2I,SAASoK,KAAKC,YAAc,KACzCnX,KAAKoX,OAAUtK,SAASoK,KAAKC,YACzBnX,KAAKyU,UAAU3T,cAAcuW,WAAWC,YAAc,EAAK,OAI/D9C,EAAArU,UAAAwV,UAAA,WACJ,IAAMnL,EAA6BxK,KACnCA,KAAKyM,OAAO8K,SAAQ,SAAUrH,GAC1BA,EAAItH,KAAO4B,EAAMvB,cAAcvH,YAAoBwO,EAAI/O,KAAe+O,EAAIsH,KAAetH,EAAIuH,QAAkBvH,EAAIwH,OAAS,OAEhI1X,KAAK2X,YAAc3X,KAAKyM,OAAO1L,KAAI,SAACmP,GAAgB,OAAAA,EAAIwH,SACxD1X,KAAK4X,aAAe5X,KAAKyM,OAAO1L,KAAI,SAACmP,EAAK5Q,GAAM,OAAA,IAAIuY,EAAuB,CACvElP,IAAKuH,EAAIuH,OACT7O,KAAMsH,EAAItH,KACVC,MAAOvJ,OAEXU,KAAK8X,UAAY9X,KAAKyM,OAAO1L,KAAI,SAACmP,GAAgB,OAAAA,EAAIsH,OACtDxX,KAAK6P,aAAe7P,KAAKyM,OAAO1L,KAAI,SAACmP,GAAgB,OAAAA,EAAIN,eACzD5P,KAAKiT,MAAQjT,KAAKyM,OAAO1L,KAAI,SAACmP,GAAgB,OAAAA,EAAI/O,OAClDnB,KAAK+X,OAAS/X,KAAKyM,OAAO1L,KAAI,SAACmP,GAAgB,OAAAA,EAAI8H,UAG/CxD,EAAArU,UAAAkV,cAAA,WAEJ,IAAI4C,EADJjY,KAAKgV,eAAiBhV,KAAK+D,WAGL,oBAAXmU,QACapU,MAAhB9D,KAAKiV,UACLgD,EAAcjY,KAAKiV,QAAQzD,QAAO,SAAC0D,GAAQ,OAAAA,EAAInR,YAAcmU,OAAOZ,cAC/DvW,KAAI,SAACmU,GAAQ,OAAAA,EAAInR,eAI1BkU,GAAeA,EAAY5S,OAC3BrF,KAAK+D,WAAakU,EAAY7V,MAE9BpC,KAAK+D,gBAAaD,GAIlB0Q,EAAArU,UAAAiV,YAAA,WACgBtR,MAAhB9D,KAAKiV,UACLjV,KAAKiV,mBZ7Jb,IAAK,IAAIzV,EAAK,GAAIF,EAAI,EAAGA,EAAI6Y,UAAU9S,OAAQ/F,IAC3CE,EAAKA,EAAG4Y,OAAOtZ,EAAOqZ,UAAU7Y,KACpC,OAAOE,EY2Ja6Y,CACLrY,KAAKiV,QAAQzD,QAAO,SAAC8G,GAAM,YAAiBxU,IAAjBwU,EAAEvU,cAC7B/D,KAAKiV,QACHzD,QAAO,SAAC8G,GAAM,YAAiBxU,IAAjBwU,EAAEvU,cAChBwU,MAAK,SAACD,EAAGE,GAAM,OAAAA,EAAEzU,WAAauU,EAAEvU,iBAKzCyQ,EAAArU,UAAAmV,WAAA,WAAA,IAAAS,EAAA/V,KACJA,KAAKwV,eAAiB,IAAIL,EAAkB,IACxBrR,MAAhB9D,KAAKiV,SACLjV,KAAKiV,QACAzD,QAAO,SAAC0D,GAAQ,YAAmBpR,IAAnBoR,EAAInR,YAA4BmR,EAAInR,YAAcgS,EAAKhS,cACvEhD,KAAI,SAACmU,GAAQ,OAAAa,EAAK0C,eAAe1C,EAAKP,eAAgBN,MAG/DlV,KAAKmE,MAAgBnE,KAAKwV,eAAerR,MACzCnE,KAAKoE,OAAiBpE,KAAKwV,eAAepR,QAGtCoQ,EAAArU,UAAAsY,eAAA,SAAejJ,EAA0BkJ,GAC7C9Z,OAAO+Z,KAAKD,GAAQ3X,KAAI,SAAC6X,GAAQ,OAAApJ,EAAMoJ,QAAuB9U,IAAhB4U,EAAOE,GAAqBF,EAAOE,GAAOpJ,EAAMoJ,gCA1TrGvI,EAAAA,UAASC,KAAA,CAAC,CACPC,SAAU,cACVC,SAAU,m9HAQVqI,UAAW,CAAC/Y,86BAtBkF4Q,EAAAA,kBAEzF5Q,sCAuBJ8Q,EAAAA,sBACAA,EAAAA,2BAEAC,EAAAA,uBACAA,EAAAA,4BACAA,EAAAA,6BACAA,EAAAA,8BACAA,EAAAA,wBAqBAC,EAAAA,UAASR,KAAA,CAACxH,kBACVgI,EAAAA,UAASR,KAAA,CAACU,uBACVF,EAAAA,UAASR,KAAA,CAAC2B,kBAEV6G,EAAAA,YAAWxI,KAAA,CAAC,+BACZwI,EAAAA,YAAWxI,KAAA,CAAC,8BACZwI,EAAAA,YAAWxI,KAAA,CAAC,gCA+CZS,EAAAA,aAAYT,KAAA,CAAC,qCCxGlB,SAAAyI,IAQW/Y,KAAAyD,UAAW,EACXzD,KAAA0D,UAAY,GAEX1D,KAAA2D,QAA+B,IAAI+F,EAAAA,oBAE7CqP,EAAA5Y,UAAAwR,YAAA,SAAYC,GACH5R,KAAKyD,UACNzD,KAAK2D,QAAQ6H,KAAKoG,GAGtBA,EAAME,kBACNF,EAAMrD,2CAnBX8B,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,qBACVC,SAAA,2NAEAwI,gBAAiBC,EAAAA,wBAAwBC,qDAGxCtI,EAAAA,wBACAA,EAAAA,yBACAA,EAAAA,uBAEAC,EAAAA,2BCXH,SAAAsI,IAWYnZ,KAAAoZ,YAAc,IAAI1P,EAAAA,aAClB1J,KAAAqZ,YAAc,IAAI3P,EAAAA,oBAE5ByP,EAAAhZ,UAAAmZ,gBAAA,WACItZ,KAAKoZ,YAAY5N,QAGrB2N,EAAAhZ,UAAAoZ,gBAAA,WACIvZ,KAAKqZ,YAAY7N,iCAnBtB6E,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,qBACVC,SAAA,8iCAICI,EAAAA,4BACAA,EAAAA,6BACAA,EAAAA,6BACAA,EAAAA,2BAEAC,EAAAA,4BACAA,EAAAA,2BCZH,SAAA2I,IAOWxZ,KAAAyZ,OAAiB,EAEhBzZ,KAAA0Z,SAAW,IAAIhQ,EAAAA,oBAEzB8P,EAAArZ,UAAAwZ,WAAA,WACI,OAAOC,MAAM5Z,KAAKsU,QAGtBkF,EAAArZ,UAAA0Z,aAAA,SAAajI,EAAc/I,GACvB7I,KAAK0Z,SAASlO,KAAK3C,6BAhBxBwH,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,sBACVC,SAAA,wjBAICI,EAAAA,sBACAA,EAAAA,wBAEAC,EAAAA,gBCiBH,iCAhBCiJ,EAAAA,SAAQxJ,KAAA,CAAC,CACRyJ,aAAc,CACZvF,EACA1L,EACAkI,EACAiB,EACA8G,EACAI,EACAK,GAEFQ,QAAS,CACPC,EAAAA,cAEFC,QAAS,CAAC1F,GACV2F,QAAS,CAACC,EAAAA,uBAAuBC,EAAAA,4BCL/B,SAAYzW,GACR5D,KAAK0X,MAAQ9T,EAAI8T,MACjB1X,KAAKyX,OAAS7T,EAAI6T,OAClBzX,KAAKwX,IAAM5T,EAAI4T,IACfxX,KAAK4P,YAAchM,EAAIgM,YACvB5P,KAAKmB,IAAMyC,EAAIzC,IACfnB,KAAK4I,KAAOhF,EAAIgF,KAChB5I,KAAKgY,MAAQpU,EAAIoU","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { Injectable, ElementRef, Renderer2 } from '@angular/core';\n\n@Injectable()\nexport class NgxGalleryHelperService {\n\n    private swipeHandlers: Map<string, Function[]> = new Map<string, Function[]>();\n\n    constructor(private renderer: Renderer2) { }\n\n    manageSwipe(status: boolean, element: ElementRef, id: string, nextHandler: Function, prevHandler: Function): void {\n\n        const handlers = this.getSwipeHandlers(id);\n\n        // swipeleft and swiperight are available only if hammerjs is included\n        try {\n            if (status && !handlers) {\n                this.swipeHandlers.set(id, [\n                    this.renderer.listen(element.nativeElement, 'swipeleft', () => nextHandler()),\n                    this.renderer.listen(element.nativeElement, 'swiperight', () => prevHandler())\n                ]);\n            } else if (!status && handlers) {\n                handlers.map((handler) => handler());\n                this.removeSwipeHandlers(id);\n            }\n        } catch (e) { }\n    }\n\n    validateUrl(url: string): string {\n        if (url.replace) {\n            return url.replace(new RegExp(' ', 'g'), '%20')\n                .replace(new RegExp('\\'', 'g'), '%27');\n        } else {\n            return url;\n        }\n    }\n\n    getBackgroundUrl(image: string) {\n        return 'url(\\'' + this.validateUrl(image) + '\\')';\n    }\n\n    private getSwipeHandlers(id: string): Function[] | undefined {\n        return this.swipeHandlers.get(id);\n    }\n\n    private removeSwipeHandlers(id: string): void {\n        this.swipeHandlers.delete(id);\n    }\n\n    getFileType(fileSource: string): string {\n        if (fileSource.startsWith('data:')) {\n            return fileSource.substr(5, Math.min(fileSource.indexOf(';'), fileSource.indexOf('/')) - 5);\n        }\n        let fileExtension = this.get_url_extension(fileSource);\n        if (!fileExtension\n            || fileExtension == 'jpeg' || fileExtension == 'jpg'\n            || fileExtension == 'png' || fileExtension == 'bmp'\n            || fileExtension == 'gif') {\n            return 'image';\n        }\n        else if (fileSource.substr(0, 10) === 'data:video' ||\n            fileExtension == 'avi' || fileExtension == 'flv'\n            || fileExtension == 'wmv' || fileExtension == 'mov'\n            || fileExtension == 'mp4') {\n            return 'video';\n        }\n        return 'unknown';\n    }\n\n    get_url_extension(url) {\n        return url.split(/[#?]/)[0].split('.').pop().trim();\n    }\n}","export class NgxGalleryAnimation {\n    static Fade = 'fade';\n    static Slide = 'slide';\n    static Rotate = 'rotate';\n    static Zoom = 'zoom';\n}\n","export class NgxGalleryImageSize {\n    static Cover = 'cover';\n    static Contain = 'contain';\n}\n","export class NgxGalleryLayout {\n    static ThumbnailsTop = 'thumbnails-top';\n    static ThumbnailsBottom = 'thumbnails-bottom';\n}\n","export class NgxGalleryOrder {\n    static Column = 1;\n    static Row = 2;\n    static Page = 3;\n}\n","export interface INgxGalleryAction {\n    icon: string;\n    disabled?: boolean;\n    titleText?: string;\n\n    onClick: (event: Event, index: number) => void;\n}\n\nexport class NgxGalleryAction implements INgxGalleryAction {\n    icon: string;\n    disabled?: boolean;\n    titleText?: string;\n\n    onClick: (event: Event, index: number) => void;\n\n    constructor(action: INgxGalleryAction) {\n        this.icon = action.icon;\n        this.disabled = action.disabled ? action.disabled : false;\n        this.titleText = action.titleText ? action.titleText : '';\n\n        this.onClick = action.onClick;\n    }\n}\n","import { NgxGalleryAnimation } from './ngx-gallery-animation.model';\nimport { NgxGalleryImageSize } from './ngx-gallery-image-size.model';\nimport { NgxGalleryLayout } from './ngx-gallery-layout.model';\nimport { NgxGalleryOrder } from './ngx-gallery-order.model';\nimport { NgxGalleryAction } from './ngx-gallery-action.model';\n\nexport interface INgxGalleryOptions {\n    width?: string;\n    height?: string;\n    breakpoint?: number;\n    fullWidth?: boolean;\n    layout?: string;\n    startIndex?: number;\n    linkTarget?: string;\n    lazyLoading?: boolean;\n    image?: boolean;\n    imagePercent?: number;\n    imageArrows?: boolean;\n    imageArrowsAutoHide?: boolean;\n    imageSwipe?: boolean;\n    imageAnimation?: string;\n    imageSize?: string;\n    imageAutoPlay?: boolean;\n    imageAutoPlayInterval?: number;\n    imageAutoPlayPauseOnHover?: boolean;\n    imageInfinityMove?: boolean;\n    imageActions?: NgxGalleryAction[];\n    imageDescription?: boolean;\n    imageBullets?: boolean;\n    thumbnails?: boolean;\n    thumbnailsColumns?: number;\n    thumbnailsRows?: number;\n    thumbnailsPercent?: number;\n    thumbnailsMargin?: number;\n    thumbnailsArrows?: boolean;\n    thumbnailsArrowsAutoHide?: boolean;\n    thumbnailsSwipe?: boolean;\n    thumbnailsMoveSize?: number;\n    thumbnailsOrder?: NgxGalleryOrder;\n    thumbnailsRemainingCount?: boolean;\n    thumbnailsAsLinks?: boolean;\n    thumbnailsAutoHide?: boolean;\n    thumbnailMargin?: number;\n    thumbnailSize?: string;\n    thumbnailActions?: NgxGalleryAction[];\n    preview?: boolean;\n    previewDescription?: boolean;\n    previewArrows?: boolean;\n    previewArrowsAutoHide?: boolean;\n    previewSwipe?: boolean;\n    previewFullscreen?: boolean;\n    previewForceFullscreen?: boolean;\n    previewCloseOnClick?: boolean;\n    previewCloseOnEsc?: boolean;\n    previewKeyboardNavigation?: boolean;\n    previewAnimation?: boolean;\n    previewAutoPlay?: boolean;\n    previewAutoPlayInterval?: number;\n    previewAutoPlayPauseOnHover?: boolean;\n    previewInfinityMove?: boolean;\n    previewZoom?: boolean;\n    previewZoomStep?: number;\n    previewZoomMax?: number;\n    previewZoomMin?: number;\n    previewRotate?: boolean;\n    previewDownload?: boolean;\n    previewCustom?: (index: number) => void;\n    previewBullets?: boolean;\n    arrowPrevIcon?: string;\n    arrowNextIcon?: string;\n    closeIcon?: string;\n    fullscreenIcon?: string;\n    spinnerIcon?: string;\n    zoomInIcon?: string;\n    zoomOutIcon?: string;\n    rotateLeftIcon?: string;\n    rotateRightIcon?: string;\n    downloadIcon?: string;\n    actions?: NgxGalleryAction[];\n}\n\nexport class NgxGalleryOptions implements INgxGalleryOptions {\n    width?: string;\n    height?: string;\n    breakpoint?: number;\n    fullWidth?: boolean;\n    layout?: string;\n    startIndex?: number;\n    linkTarget?: string;\n    lazyLoading?: boolean;\n    image?: boolean;\n    imagePercent?: number;\n    imageArrows?: boolean;\n    imageArrowsAutoHide?: boolean;\n    imageSwipe?: boolean;\n    imageAnimation?: string;\n    imageSize?: string;\n    imageAutoPlay?: boolean;\n    imageAutoPlayInterval?: number;\n    imageAutoPlayPauseOnHover?: boolean;\n    imageInfinityMove?: boolean;\n    imageActions?: NgxGalleryAction[];\n    imageDescription?: boolean;\n    imageBullets?: boolean;\n    thumbnails?: boolean;\n    thumbnailsColumns?: number;\n    thumbnailsRows?: number;\n    thumbnailsPercent?: number;\n    thumbnailsMargin?: number;\n    thumbnailsArrows?: boolean;\n    thumbnailsArrowsAutoHide?: boolean;\n    thumbnailsSwipe?: boolean;\n    thumbnailsMoveSize?: number;\n    thumbnailsOrder?: NgxGalleryOrder;\n    thumbnailsRemainingCount?: boolean;\n    thumbnailsAsLinks?: boolean;\n    thumbnailsAutoHide?: boolean;\n    thumbnailMargin?: number;\n    thumbnailSize?: string;\n    thumbnailActions?: NgxGalleryAction[];\n    preview?: boolean;\n    previewDescription?: boolean;\n    previewArrows?: boolean;\n    previewArrowsAutoHide?: boolean;\n    previewSwipe?: boolean;\n    previewFullscreen?: boolean;\n    previewForceFullscreen?: boolean;\n    previewCloseOnClick?: boolean;\n    previewCloseOnEsc?: boolean;\n    previewKeyboardNavigation?: boolean;\n    previewAnimation?: boolean;\n    previewAutoPlay?: boolean;\n    previewAutoPlayInterval?: number;\n    previewAutoPlayPauseOnHover?: boolean;\n    previewInfinityMove?: boolean;\n    previewZoom?: boolean;\n    previewZoomStep?: number;\n    previewZoomMax?: number;\n    previewZoomMin?: number;\n    previewRotate?: boolean;\n    previewDownload?: boolean;\n    previewCustom?: (index: number) => void;\n    previewBullets?: boolean;\n    arrowPrevIcon?: string;\n    arrowNextIcon?: string;\n    closeIcon?: string;\n    fullscreenIcon?: string;\n    spinnerIcon?: string;\n    zoomInIcon?: string;\n    zoomOutIcon?: string;\n    rotateLeftIcon?: string;\n    rotateRightIcon?: string;\n    downloadIcon?: string;\n    actions?: NgxGalleryAction[];\n\n    constructor(obj: INgxGalleryOptions) {\n\n        const preventDefaults = obj.breakpoint === undefined ? false : true;\n\n        function use<T>(source: T, defaultValue: T): T {\n            return obj && (source !== undefined || preventDefaults) ? source : defaultValue;\n        }\n\n        this.breakpoint = use(obj.breakpoint, undefined);\n        this.width = use(obj.width, '500px');\n        this.height = use(obj.height, '400px');\n        this.fullWidth = use(obj.fullWidth, false);\n        this.layout = use(obj.layout, NgxGalleryLayout.ThumbnailsBottom);\n        this.startIndex = use(obj.startIndex, 0);\n        this.linkTarget = use(obj.linkTarget, '_blank');\n        this.lazyLoading = use(obj.lazyLoading, true);\n\n        this.image = use(obj.image, true);\n        this.imagePercent = use(obj.imagePercent, 75);\n        this.imageArrows = use(obj.imageArrows, true);\n        this.imageArrowsAutoHide = use(obj.imageArrowsAutoHide, false);\n        this.imageSwipe = use(obj.imageSwipe, false);\n        this.imageAnimation = use(obj.imageAnimation, NgxGalleryAnimation.Fade);\n        this.imageSize = use(obj.imageSize, NgxGalleryImageSize.Cover);\n        this.imageAutoPlay = use(obj.imageAutoPlay, false);\n        this.imageAutoPlayInterval = use(obj.imageAutoPlayInterval, 2000);\n        this.imageAutoPlayPauseOnHover = use(obj.imageAutoPlayPauseOnHover, false);\n        this.imageInfinityMove = use(obj.imageInfinityMove, false);\n        if (obj && obj.imageActions && obj.imageActions.length) {\n            obj.imageActions = obj.imageActions.map(action => new NgxGalleryAction(action));\n        }\n        this.imageActions = use(obj.imageActions, []);\n        this.imageDescription = use(obj.imageDescription, false);\n        this.imageBullets = use(obj.imageBullets, false);\n\n        this.thumbnails = use(obj.thumbnails, true);\n        this.thumbnailsColumns = use(obj.thumbnailsColumns, 4);\n        this.thumbnailsRows = use(obj.thumbnailsRows, 1);\n        this.thumbnailsPercent = use(obj.thumbnailsPercent, 25);\n        this.thumbnailsMargin = use(obj.thumbnailsMargin, 10);\n        this.thumbnailsArrows = use(obj.thumbnailsArrows, true);\n        this.thumbnailsArrowsAutoHide = use(obj.thumbnailsArrowsAutoHide, false);\n        this.thumbnailsSwipe = use(obj.thumbnailsSwipe, false);\n        this.thumbnailsMoveSize = use(obj.thumbnailsMoveSize, 1);\n        this.thumbnailsOrder = use(obj.thumbnailsOrder, NgxGalleryOrder.Column);\n        this.thumbnailsRemainingCount = use(obj.thumbnailsRemainingCount, false);\n        this.thumbnailsAsLinks = use(obj.thumbnailsAsLinks, false);\n        this.thumbnailsAutoHide = use(obj.thumbnailsAutoHide, false);\n        this.thumbnailMargin = use(obj.thumbnailMargin, 10);\n        this.thumbnailSize = use(obj.thumbnailSize, NgxGalleryImageSize.Cover);\n        if (obj && obj.thumbnailActions && obj.thumbnailActions.length) {\n            obj.thumbnailActions = obj.thumbnailActions.map(action => new NgxGalleryAction(action));\n        }\n        this.thumbnailActions = use(obj.thumbnailActions, []);\n\n        this.preview = use(obj.preview, true);\n        this.previewDescription = use(obj.previewDescription, true);\n        this.previewArrows = use(obj.previewArrows, true);\n        this.previewArrowsAutoHide = use(obj.previewArrowsAutoHide, false);\n        this.previewSwipe = use(obj.previewSwipe, false);\n        this.previewFullscreen = use(obj.previewFullscreen, false);\n        this.previewForceFullscreen = use(obj.previewForceFullscreen, false);\n        this.previewCloseOnClick = use(obj.previewCloseOnClick, false);\n        this.previewCloseOnEsc = use(obj.previewCloseOnEsc, false);\n        this.previewKeyboardNavigation = use(obj.previewKeyboardNavigation, false);\n        this.previewAnimation = use(obj.previewAnimation, true);\n        this.previewAutoPlay = use(obj.previewAutoPlay, false);\n        this.previewAutoPlayInterval = use(obj.previewAutoPlayInterval, 2000);\n        this.previewAutoPlayPauseOnHover = use(obj.previewAutoPlayPauseOnHover, false);\n        this.previewInfinityMove = use(obj.previewInfinityMove, false);\n        this.previewZoom = use(obj.previewZoom, false);\n        this.previewZoomStep = use(obj.previewZoomStep, 0.1);\n        this.previewZoomMax = use(obj.previewZoomMax, 2);\n        this.previewZoomMin = use(obj.previewZoomMin, 0.5);\n        this.previewRotate = use(obj.previewRotate, false);\n        this.previewDownload = use(obj.previewDownload, false);\n        this.previewCustom = use(obj.previewCustom, undefined);\n        this.previewBullets = use(obj.previewBullets, false);\n\n        this.arrowPrevIcon = use(obj.arrowPrevIcon, 'fa fa-arrow-circle-left');\n        this.arrowNextIcon = use(obj.arrowNextIcon, 'fa fa-arrow-circle-right');\n        this.closeIcon = use(obj.closeIcon, 'fa fa-times-circle');\n        this.fullscreenIcon = use(obj.fullscreenIcon, 'fa fa-arrows-alt');\n        this.spinnerIcon = use(obj.spinnerIcon, 'fa fa-spinner fa-pulse fa-3x fa-fw');\n        this.zoomInIcon = use(obj.zoomInIcon, 'fa fa-search-plus');\n        this.zoomOutIcon = use(obj.zoomOutIcon, 'fa fa-search-minus');\n        this.rotateLeftIcon = use(obj.rotateLeftIcon, 'fa fa-undo');\n        this.rotateRightIcon = use(obj.rotateRightIcon, 'fa fa-repeat');\n        this.downloadIcon = use(obj.downloadIcon, 'fa fa-arrow-circle-down');\n\n        if (obj && obj.actions && obj.actions.length) {\n            obj.actions = obj.actions.map(action => new NgxGalleryAction(action));\n        }\n        this.actions = use(obj.actions, []);\n    }\n}\n","import { SafeResourceUrl } from '@angular/platform-browser';\n\nexport interface INgxGalleryOrderedImage {\n    src: string | SafeResourceUrl;\n    type: string;\n    index: number;\n}\n\nexport class NgxGalleryOrderedImage implements INgxGalleryOrderedImage {\n    src: string | SafeResourceUrl;\n    type: string;\n    index: number;\n\n    constructor(obj: INgxGalleryOrderedImage) {\n        this.src = obj.src;\n        this.type = obj.type;\n        this.index = obj.index;\n    }\n}\n","import { ChangeDetectorRef, Component, Input, Output, EventEmitter, OnInit, OnChanges, SimpleChanges, ElementRef, HostListener, ViewChild, Renderer2} from '@angular/core';\nimport { SafeResourceUrl, DomSanitizer, SafeUrl, SafeStyle } from '@angular/platform-browser';\n\nimport { NgxGalleryAction } from '../ngx-gallery-action.model';\nimport { NgxGalleryHelperService } from '../ngx-gallery-helper.service';\n\n@Component({\n    selector: 'ngx-gallery-preview',\n    templateUrl: './ngx-gallery-preview.component.html',\n    styleUrls: ['./ngx-gallery-preview.component.scss']\n})\nexport class NgxGalleryPreviewComponent implements OnInit, OnChanges {\n\n    src: SafeUrl;\n    srcIndex: number;\n    description: string;\n    type: string;\n    showSpinner = false;\n    positionLeft = 0;\n    positionTop = 0;\n    zoomValue = 1;\n    loading = false;\n    rotateValue = 0;\n    index = 0;\n\n    @Input() images: string[] | SafeResourceUrl[];\n    @Input() descriptions: string[];\n    @Input() showDescription: boolean;\n    @Input() arrows: boolean;\n    @Input() arrowsAutoHide: boolean;\n    @Input() swipe: boolean;\n    @Input() fullscreen: boolean;\n    @Input() forceFullscreen: boolean;\n    @Input() closeOnClick: boolean;\n    @Input() closeOnEsc: boolean;\n    @Input() keyboardNavigation: boolean;\n    @Input() arrowPrevIcon: string;\n    @Input() arrowNextIcon: string;\n    @Input() closeIcon: string;\n    @Input() fullscreenIcon: string;\n    @Input() spinnerIcon: string;\n    @Input() autoPlay: boolean;\n    @Input() autoPlayInterval: number;\n    @Input() autoPlayPauseOnHover: boolean;\n    @Input() infinityMove: boolean;\n    @Input() zoom: boolean;\n    @Input() zoomStep: number;\n    @Input() zoomMax: number;\n    @Input() zoomMin: number;\n    @Input() zoomInIcon: string;\n    @Input() zoomOutIcon: string;\n    @Input() animation: boolean;\n    @Input() actions: NgxGalleryAction[];\n    @Input() rotate: boolean;\n    @Input() rotateLeftIcon: string;\n    @Input() rotateRightIcon: string;\n    @Input() download: boolean;\n    @Input() downloadIcon: string;\n    @Input() bullets: string;\n\n    @Output() onOpen = new EventEmitter();\n    @Output() onClose = new EventEmitter();\n    @Output() onActiveChange = new EventEmitter<number>();\n\n    @ViewChild('previewImage') previewImage: ElementRef;\n\n    private isOpen = false;\n    private timer;\n    private initialX = 0;\n    private initialY = 0;\n    private initialLeft = 0;\n    private initialTop = 0;\n    private isMove = false;\n\n    private keyDownListener: Function;\n\n    constructor(private sanitization: DomSanitizer, private elementRef: ElementRef,\n        private helperService: NgxGalleryHelperService, private renderer: Renderer2,\n        private changeDetectorRef: ChangeDetectorRef) {}\n\n    ngOnInit(): void {\n        if (this.arrows && this.arrowsAutoHide) {\n            this.arrows = false;\n        }\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (changes['swipe']) {\n            this.helperService.manageSwipe(this.swipe, this.elementRef,\n            'preview', () => this.showNext(), () => this.showPrev());\n        }\n    }\n\n    ngOnDestroy() {\n        if (this.keyDownListener) {\n            this.keyDownListener();\n        }\n    }\n\n    @HostListener('mouseenter') onMouseEnter() {\n        if (this.arrowsAutoHide && !this.arrows) {\n            this.arrows = true;\n        }\n    }\n\n    @HostListener('mouseleave') onMouseLeave() {\n        if (this.arrowsAutoHide && this.arrows) {\n            this.arrows = false;\n        }\n    }\n\n    onKeyDown(e) {\n        if (this.isOpen) {\n            if (this.keyboardNavigation) {\n                if (this.isKeyboardPrev(e)) {\n                    this.showPrev();\n                } else if (this.isKeyboardNext(e)) {\n                    this.showNext();\n                }\n            }\n            if (this.closeOnEsc && this.isKeyboardEsc(e)) {\n                this.close();\n            }\n        }\n    }\n\n    open(index: number): void {\n        this.onOpen.emit();\n\n        this.index = index;\n        this.isOpen = true;\n        this.show(true);\n\n        if (this.forceFullscreen) {\n            this.manageFullscreen();\n        }\n\n        this.keyDownListener = this.renderer.listen(\"window\", \"keydown\", (e) => this.onKeyDown(e));\n    }\n\n    close(): void {\n        this.isOpen = false;\n        this.closeFullscreen();\n        this.onClose.emit();\n\n        this.stopAutoPlay();\n\n        if (this.keyDownListener) {\n            this.keyDownListener();\n        }\n    }\n\n    imageMouseEnter(): void {\n        if (this.autoPlay && this.autoPlayPauseOnHover) {\n            this.stopAutoPlay();\n        }\n    }\n\n    imageMouseLeave(): void {\n        if (this.autoPlay && this.autoPlayPauseOnHover) {\n            this.startAutoPlay();\n        }\n    }\n\n    startAutoPlay(): void {\n        if (this.autoPlay) {\n            this.stopAutoPlay();\n\n            this.timer = setTimeout(() => {\n                if (!this.showNext()) {\n                    this.index = -1;\n                    this.showNext();\n                }\n            }, this.autoPlayInterval);\n        }\n    }\n\n    stopAutoPlay(): void {\n        if (this.timer) {\n            clearTimeout(this.timer);\n        }\n    }\n\n    showAtIndex(index: number): void {\n        this.index = index;\n        this.show();\n    }\n\n    showNext(): boolean {\n        if (this.canShowNext()) {\n            this.index++;\n\n            if (this.index === this.images.length) {\n                this.index = 0;\n            }\n\n            this.show();\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    showPrev(): void {\n        if (this.canShowPrev()) {\n            this.index--;\n\n            if (this.index < 0) {\n                this.index = this.images.length - 1;\n            }\n\n            this.show();\n        }\n    }\n\n    canShowNext(): boolean {\n        if (this.loading) {\n            return false;\n        } else if (this.images) {\n            return this.infinityMove || this.index < this.images.length - 1 ? true : false;\n        } else {\n            return false;\n        }\n    }\n\n    canShowPrev(): boolean {\n        if (this.loading) {\n            return false;\n        } else if (this.images) {\n            return this.infinityMove || this.index > 0 ? true : false;\n        } else {\n            return false;\n        }\n    }\n\n    manageFullscreen(): void {\n        if (this.fullscreen || this.forceFullscreen) {\n            const doc = <any>document;\n\n            if (!doc.fullscreenElement && !doc.mozFullScreenElement\n                && !doc.webkitFullscreenElement && !doc.msFullscreenElement) {\n                this.openFullscreen();\n            } else {\n                this.closeFullscreen();\n            }\n        }\n    }\n\n    getSafeUrl(image: string): SafeUrl {\n        return image.substr(0, 10) === 'data:image' ?\n            image : this.sanitization.bypassSecurityTrustUrl(image);\n    }\n\n    getFileType (fileSource: string): string {\n        return this.helperService.getFileType(fileSource);\n    }\n\n    zoomIn(): void {\n        if (this.canZoomIn()) {\n            this.zoomValue += this.zoomStep;\n\n            if (this.zoomValue > this.zoomMax) {\n                this.zoomValue = this.zoomMax;\n            }\n        }\n    }\n\n    zoomOut(): void {\n        if (this.canZoomOut()) {\n            this.zoomValue -= this.zoomStep;\n\n            if (this.zoomValue < this.zoomMin) {\n                this.zoomValue = this.zoomMin;\n            }\n\n            if (this.zoomValue <= 1) {\n                this.resetPosition()\n            }\n        }\n    }\n\n    rotateLeft(): void {\n        this.rotateValue -= 90;\n    }\n\n    rotateRight(): void {\n        this.rotateValue += 90;\n    }\n\n    getTransform(): SafeStyle {\n        return this.sanitization.bypassSecurityTrustStyle('scale(' + this.zoomValue + ') rotate(' + this.rotateValue + 'deg)');\n    }\n\n    canZoomIn(): boolean {\n        return this.zoomValue < this.zoomMax ? true : false;\n    }\n\n    canZoomOut(): boolean {\n        return this.zoomValue > this.zoomMin ? true : false;\n    }\n\n    canDragOnZoom() {\n        return this.zoom && this.zoomValue > 1;\n    }\n\n    mouseDownHandler(e): void {\n        if (this.canDragOnZoom()) {\n            this.initialX = this.getClientX(e);\n            this.initialY = this.getClientY(e);\n            this.initialLeft = this.positionLeft;\n            this.initialTop = this.positionTop;\n            this.isMove = true;\n\n            e.preventDefault();\n        }\n    }\n\n    mouseUpHandler(e): void {\n        this.isMove = false;\n    }\n\n    mouseMoveHandler(e) {\n        if (this.isMove) {\n            this.positionLeft = this.initialLeft + (this.getClientX(e) - this.initialX);\n            this.positionTop = this.initialTop + (this.getClientY(e) - this.initialY);\n        }\n    }\n\n    private getClientX(e): number {\n        return e.touches && e.touches.length ? e.touches[0].clientX : e.clientX;\n    }\n\n    private getClientY(e): number {\n        return e.touches && e.touches.length ? e.touches[0].clientY : e.clientY;\n    }\n\n    private resetPosition() {\n        if (this.zoom) {\n            this.positionLeft = 0;\n            this.positionTop = 0;\n        }\n    }\n\n    private isKeyboardNext(e): boolean {\n        return e.keyCode === 39 ? true : false;\n    }\n\n    private isKeyboardPrev(e): boolean {\n        return e.keyCode === 37 ? true : false;\n    }\n\n    private isKeyboardEsc(e): boolean {\n        return e.keyCode === 27 ? true : false;\n    }\n\n    private openFullscreen(): void {\n        const element = <any>document.documentElement;\n\n        if (element.requestFullscreen) {\n            element.requestFullscreen();\n        } else if (element.msRequestFullscreen) {\n            element.msRequestFullscreen();\n        } else if (element.mozRequestFullScreen) {\n            element.mozRequestFullScreen();\n        } else if (element.webkitRequestFullscreen) {\n            element.webkitRequestFullscreen();\n        }\n    }\n\n    private closeFullscreen(): void {\n        if (this.isFullscreen()) {\n            const doc = <any>document;\n\n            if (doc.exitFullscreen) {\n                doc.exitFullscreen();\n            } else if (doc.msExitFullscreen) {\n                doc.msExitFullscreen();\n            } else if (doc.mozCancelFullScreen) {\n                doc.mozCancelFullScreen();\n            } else if (doc.webkitExitFullscreen) {\n                doc.webkitExitFullscreen();\n            }\n        }\n    }\n\n    private isFullscreen() {\n        const doc = <any>document;\n\n        return doc.fullscreenElement || doc.webkitFullscreenElement\n            || doc.mozFullScreenElement || doc.msFullscreenElement;\n    }\n\n\n\n    private show(first = false) {\n        this.loading = true;\n        this.stopAutoPlay();\n\n        this.onActiveChange.emit(this.index);\n\n        if (first || !this.animation) {\n            this._show();\n        } else {\n            setTimeout(() => this._show(), 600);\n        }\n    }\n\n    private _show() {\n        this.zoomValue = 1;\n        this.rotateValue = 0;\n        this.resetPosition();\n\n        this.src = this.getSafeUrl(<string>this.images[this.index]);\n        this.type = this.getFileType(<string>this.images[this.index]);\n        this.srcIndex = this.index;\n        this.description = this.descriptions[this.index];\n        this.changeDetectorRef.markForCheck();\n\n        setTimeout(() => {\n            if (this.isLoaded(this.previewImage.nativeElement) || this.type == 'video') {\n                this.loading = false;\n                this.startAutoPlay();\n                this.changeDetectorRef.markForCheck();\n            } else if (this.type == 'video') {\n                \n            } else {\n                setTimeout(() => {\n                    if (this.loading) {\n                        this.showSpinner = true;\n                        this.changeDetectorRef.markForCheck();\n                    }\n                })\n\n                this.previewImage.nativeElement.onload = () => {\n                    this.loading = false;\n                    this.showSpinner = false;\n                    this.previewImage.nativeElement.onload = null;\n                    this.startAutoPlay();\n                    this.changeDetectorRef.markForCheck();\n                }\n            }\n        })\n    }\n\n    private isLoaded(img): boolean {\n        if (!img.complete) {\n            return false;\n        }\n\n        if (typeof img.naturalWidth !== 'undefined' && img.naturalWidth === 0) {\n            return false;\n        }\n\n        return true;\n    }\n}","import { Component, Input, Output, EventEmitter, HostListener, ElementRef, OnInit, OnChanges, SimpleChanges } from '@angular/core';\nimport { DomSanitizer, SafeStyle } from '@angular/platform-browser';\nimport { NgxGalleryHelperService } from '../ngx-gallery-helper.service';\nimport { NgxGalleryOrderedImage } from '../ngx-gallery-ordered-image.model';\nimport { NgxGalleryAnimation } from '../ngx-gallery-animation.model';\nimport { NgxGalleryAction } from '../ngx-gallery-action.model';\n\n@Component({\n    selector: 'ngx-gallery-image',\n    templateUrl: './ngx-gallery-image.component.html',\n    styleUrls: ['./ngx-gallery-image.component.scss']\n})\nexport class NgxGalleryImageComponent implements OnInit, OnChanges {\n    @Input() images: NgxGalleryOrderedImage[];\n    @Input() clickable: boolean;\n    @Input() selectedIndex: number;\n    @Input() arrows: boolean;\n    @Input() arrowsAutoHide: boolean;\n    @Input() swipe: boolean;\n    @Input() animation: string;\n    @Input() size: string;\n    @Input() arrowPrevIcon: string;\n    @Input() arrowNextIcon: string;\n    @Input() autoPlay: boolean;\n    @Input() autoPlayInterval: number;\n    @Input() autoPlayPauseOnHover: boolean;\n    @Input() infinityMove: boolean;\n    @Input() lazyLoading: boolean;\n    @Input() actions: NgxGalleryAction[];\n    @Input() descriptions: string[];\n    @Input() showDescription: boolean;\n    @Input() bullets: boolean;\n\n    @Output() onClick = new EventEmitter();\n    @Output() onActiveChange = new EventEmitter();\n\n    canChangeImage = true;\n\n    private timer;\n\n    constructor(private sanitization: DomSanitizer,\n        private elementRef: ElementRef, private helperService: NgxGalleryHelperService) {}\n\n    ngOnInit(): void {\n        if (this.arrows && this.arrowsAutoHide) {\n            this.arrows = false;\n        }\n\n        if (this.autoPlay) {\n            this.startAutoPlay();\n        }\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (changes['swipe']) {\n            this.helperService.manageSwipe(this.swipe, this.elementRef, 'image', () => this.showNext(), () => this.showPrev());\n        }\n    }\n\n    @HostListener('mouseenter') onMouseEnter() {\n        if (this.arrowsAutoHide && !this.arrows) {\n            this.arrows = true;\n        }\n\n        if (this.autoPlay && this.autoPlayPauseOnHover) {\n            this.stopAutoPlay();\n        }\n    }\n\n    @HostListener('mouseleave') onMouseLeave() {\n        if (this.arrowsAutoHide && this.arrows) {\n            this.arrows = false;\n        }\n\n        if (this.autoPlay && this.autoPlayPauseOnHover) {\n            this.startAutoPlay();\n        }\n    }\n\n    reset(index: number): void {\n        this.selectedIndex = index;\n    }\n\n    getImages(): NgxGalleryOrderedImage[] {\n        if (!this.images) {\n            return [];\n        }\n\n        if (this.lazyLoading) {\n            let indexes = [this.selectedIndex];\n            let prevIndex = this.selectedIndex - 1;\n\n            if (prevIndex === -1 && this.infinityMove) {\n                indexes.push(this.images.length - 1)\n            } else if (prevIndex >= 0) {\n                indexes.push(prevIndex);\n            }\n\n            let nextIndex = this.selectedIndex + 1;\n\n            if (nextIndex == this.images.length && this.infinityMove) {\n                indexes.push(0);\n            } else if (nextIndex < this.images.length) {\n                indexes.push(nextIndex);\n            }\n\n            return this.images.filter((img, i) => indexes.indexOf(i) != -1);\n        } else {\n            return this.images;\n        }\n    }\n\n    startAutoPlay(): void {\n        this.stopAutoPlay();\n\n        this.timer = setInterval(() => {\n            if (!this.showNext()) {\n                this.selectedIndex = -1;\n                this.showNext();\n            }\n        }, this.autoPlayInterval);\n    }\n\n    stopAutoPlay() {\n        if (this.timer) {\n            clearInterval(this.timer);\n        }\n    }\n\n    handleClick(event: Event, index: number): void {\n        if (this.clickable) {\n            this.onClick.emit(index);\n\n            event.stopPropagation();\n            event.preventDefault();\n        }\n    }\n\n    show(index: number) {\n        this.selectedIndex = index;\n        this.onActiveChange.emit(this.selectedIndex);\n        this.setChangeTimeout();\n    }\n\n    showNext(): boolean {\n        if (this.canShowNext() && this.canChangeImage) {\n            this.selectedIndex++;\n\n            if (this.selectedIndex === this.images.length) {\n                this.selectedIndex = 0;\n            }\n\n            this.onActiveChange.emit(this.selectedIndex);\n            this.setChangeTimeout();\n\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    showPrev(): void {\n        if (this.canShowPrev() && this.canChangeImage) {\n            this.selectedIndex--;\n\n            if (this.selectedIndex < 0) {\n                this.selectedIndex = this.images.length - 1;\n            }\n\n            this.onActiveChange.emit(this.selectedIndex);\n            this.setChangeTimeout();\n        }\n    }\n\n    setChangeTimeout() {\n        this.canChangeImage = false;\n        let timeout = 1000;\n\n        if (this.animation === NgxGalleryAnimation.Slide\n            || this.animation === NgxGalleryAnimation.Fade) {\n            timeout = 500;\n        }\n\n        setTimeout(() => {\n            this.canChangeImage = true;\n        }, timeout);\n    }\n\n    canShowNext(): boolean {\n        if (this.images) {\n            return this.infinityMove || this.selectedIndex < this.images.length - 1\n                ? true : false;\n        } else {\n            return false;\n        }\n    }\n\n    canShowPrev(): boolean {\n        if (this.images) {\n            return this.infinityMove || this.selectedIndex > 0 ? true : false;\n        } else {\n            return false;\n        }\n    }\n\n    getSafeUrl(image: string): SafeStyle {\n        return this.sanitization.bypassSecurityTrustStyle(this.helperService.getBackgroundUrl(image));\n    }\n\n    getFileType(fileSource: string) {\n        return this.helperService.getFileType(fileSource);\n    }\n}","import { Component, OnChanges, Input, Output, EventEmitter, ElementRef, SimpleChanges, HostListener } from '@angular/core';\nimport { SafeResourceUrl, DomSanitizer, SafeStyle } from '@angular/platform-browser';\nimport { NgxGalleryAction } from '../ngx-gallery-action.model';\nimport { NgxGalleryHelperService } from '../ngx-gallery-helper.service';\nimport { NgxGalleryOrder } from '../ngx-gallery-order.model';\n\n@Component({\n    selector: 'ngx-gallery-thumbnails',\n    templateUrl: './ngx-gallery-thumbnails.component.html',\n    styleUrls: ['./ngx-gallery-thumbnails.component.scss']\n})\nexport class NgxGalleryThumbnailsComponent implements OnChanges {\n\n    thumbnailsLeft: string;\n    thumbnailsMarginLeft: string;\n    mouseenter: boolean;\n    remainingCountValue: number;\n\n    minStopIndex = 0;\n\n    @Input() images: string[] | SafeResourceUrl[];\n    @Input() links: string[];\n    @Input() labels: string[];\n    @Input() linkTarget: string;\n    @Input() columns: number;\n    @Input() rows: number;\n    @Input() arrows: boolean;\n    @Input() arrowsAutoHide: boolean;\n    @Input() margin: number;\n    @Input() selectedIndex: number;\n    @Input() clickable: boolean;\n    @Input() swipe: boolean;\n    @Input() size: string;\n    @Input() arrowPrevIcon: string;\n    @Input() arrowNextIcon: string;\n    @Input() moveSize: number;\n    @Input() order: number;\n    @Input() remainingCount: boolean;\n    @Input() lazyLoading: boolean;\n    @Input() actions: NgxGalleryAction[];\n\n    @Output() onActiveChange = new EventEmitter();\n\n    private index = 0;\n\n    constructor(private sanitization: DomSanitizer, private elementRef: ElementRef,\n        private helperService: NgxGalleryHelperService) { }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (changes['selectedIndex']) {\n            this.validateIndex();\n        }\n\n        if (changes['swipe']) {\n            this.helperService.manageSwipe(this.swipe, this.elementRef,\n                'thumbnails', () => this.moveRight(), () => this.moveLeft());\n        }\n\n        if (this.images) {\n            this.remainingCountValue = this.images.length - (this.rows * this.columns);\n        }\n    }\n\n    @HostListener('mouseenter') onMouseEnter() {\n        this.mouseenter = true;\n    }\n\n    @HostListener('mouseleave') onMouseLeave() {\n        this.mouseenter = false;\n    }\n\n    reset(index: number): void {\n        this.selectedIndex = index;\n        this.setDefaultPosition();\n\n        this.index = 0;\n        this.validateIndex();\n    }\n\n    getImages(): string[] | SafeResourceUrl[] {\n        if (!this.images) {\n            return [];\n        }\n\n        if (this.remainingCount) {\n            return this.images.slice(0, this.rows * this.columns);\n        }\n        else if (this.lazyLoading && this.order != NgxGalleryOrder.Row) {\n            let stopIndex = 0;\n\n            if (this.order === NgxGalleryOrder.Column) {\n                stopIndex = (this.index + this.columns + this.moveSize) * this.rows;\n            }\n            else if (this.order === NgxGalleryOrder.Page) {\n                stopIndex = this.index + ((this.columns * this.rows) * 2);\n            }\n\n            if (stopIndex <= this.minStopIndex) {\n                stopIndex = this.minStopIndex;\n            } else {\n                this.minStopIndex = stopIndex;\n            }\n\n            return this.images.slice(0, stopIndex);\n        }\n        else {\n            return this.images;\n        }\n    }\n\n    handleClick(event: Event, index: number): void {\n        if (!this.hasLink(index)) {\n            this.selectedIndex = index;\n            this.onActiveChange.emit(index);\n\n            event.stopPropagation();\n            event.preventDefault();\n        }\n    }\n\n    hasLink(index: number): boolean {\n        if (this.links && this.links.length && this.links[index]) return true;\n    }\n\n    moveRight(): void {\n        if (this.canMoveRight()) {\n            this.index += this.moveSize;\n            let maxIndex = this.getMaxIndex() - this.columns;\n\n            if (this.index > maxIndex) {\n                this.index = maxIndex;\n            }\n\n            this.setThumbnailsPosition();\n        }\n    }\n\n    moveLeft(): void {\n        if (this.canMoveLeft()) {\n            this.index -= this.moveSize;\n\n            if (this.index < 0) {\n                this.index = 0;\n            }\n\n            this.setThumbnailsPosition();\n        }\n    }\n\n    canMoveRight(): boolean {\n        return this.index + this.columns < this.getMaxIndex() ? true : false;\n    }\n\n    canMoveLeft(): boolean {\n        return this.index !== 0 ? true : false;\n    }\n\n    getThumbnailLeft(index: number): SafeStyle {\n        let calculatedIndex;\n\n        if (this.order === NgxGalleryOrder.Column) {\n            calculatedIndex = Math.floor(index / this.rows);\n        }\n        else if (this.order === NgxGalleryOrder.Page) {\n            calculatedIndex = (index % this.columns) + (Math.floor(index / (this.rows * this.columns)) * this.columns);\n        }\n        else if (this.order == NgxGalleryOrder.Row && this.remainingCount) {\n            calculatedIndex = index % this.columns;\n        }\n        else {\n            calculatedIndex = index % Math.ceil(this.images.length / this.rows);\n        }\n\n        return this.getThumbnailPosition(calculatedIndex, this.columns);\n    }\n\n    getThumbnailTop(index: number): SafeStyle {\n        let calculatedIndex;\n\n        if (this.order === NgxGalleryOrder.Column) {\n            calculatedIndex = index % this.rows;\n        }\n        else if (this.order === NgxGalleryOrder.Page) {\n            calculatedIndex = Math.floor(index / this.columns) - (Math.floor(index / (this.rows * this.columns)) * this.rows);\n        }\n        else if (this.order == NgxGalleryOrder.Row && this.remainingCount) {\n            calculatedIndex = Math.floor(index / this.columns);\n        }\n        else {\n            calculatedIndex = Math.floor(index / Math.ceil(this.images.length / this.rows));\n        }\n\n        return this.getThumbnailPosition(calculatedIndex, this.rows);\n    }\n\n    getThumbnailWidth(): SafeStyle {\n        return this.getThumbnailDimension(this.columns);\n    }\n\n    getThumbnailHeight(): SafeStyle {\n        return this.getThumbnailDimension(this.rows);\n    }\n\n    setThumbnailsPosition(): void {\n        this.thumbnailsLeft = - ((100 / this.columns) * this.index) + '%'\n\n        this.thumbnailsMarginLeft = - ((this.margin - (((this.columns - 1)\n            * this.margin) / this.columns)) * this.index) + 'px';\n    }\n\n    setDefaultPosition(): void {\n        this.thumbnailsLeft = '0px';\n        this.thumbnailsMarginLeft = '0px';\n    }\n\n    canShowArrows(): boolean {\n        if (this.remainingCount) {\n            return false;\n        } else if (this.arrows && this.images && this.images.length > this.getVisibleCount()\n            && (!this.arrowsAutoHide || this.mouseenter)) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    validateIndex(): void {\n        if (this.images) {\n            let newIndex;\n\n            if (this.order === NgxGalleryOrder.Column) {\n                newIndex = Math.floor(this.selectedIndex / this.rows);\n            } else {\n                newIndex = this.selectedIndex % Math.ceil(this.images.length / this.rows);\n            }\n\n            if (this.remainingCount) {\n                newIndex = 0;\n            }\n\n            if (newIndex < this.index || newIndex >= this.index + this.columns) {\n                const maxIndex = this.getMaxIndex() - this.columns;\n                this.index = newIndex > maxIndex ? maxIndex : newIndex;\n\n                this.setThumbnailsPosition();\n            }\n        }\n    }\n\n    getSafeUrl(image: string): SafeStyle {\n        return this.sanitization.bypassSecurityTrustStyle(this.helperService.getBackgroundUrl(image));\n    }\n\n    private getThumbnailPosition(index: number, count: number): SafeStyle {\n        return this.getSafeStyle('calc(' + ((100 / count) * index) + '% + '\n            + ((this.margin - (((count - 1) * this.margin) / count)) * index) + 'px)');\n    }\n\n    private getThumbnailDimension(count: number): SafeStyle {\n        if (this.margin !== 0) {\n            return this.getSafeStyle('calc(' + (100 / count) + '% - '\n                + (((count - 1) * this.margin) / count) + 'px)');\n        } else {\n            return this.getSafeStyle('calc(' + (100 / count) + '% + 1px)');\n        }\n    }\n\n    private getMaxIndex(): number {\n        if (this.order == NgxGalleryOrder.Page) {\n            let maxIndex = (Math.floor(this.images.length / this.getVisibleCount()) * this.columns);\n\n            if (this.images.length % this.getVisibleCount() > this.columns) {\n                maxIndex += this.columns;\n            }\n            else {\n                maxIndex += this.images.length % this.getVisibleCount();\n            }\n\n            return maxIndex;\n        }\n        else {\n            return Math.ceil(this.images.length / this.rows);\n        }\n    }\n\n    private getVisibleCount(): number {\n        return this.columns * this.rows;\n    }\n\n    private getSafeStyle(value: string): SafeStyle {\n        return this.sanitization.bypassSecurityTrustStyle(value);\n    }\n\n    getFileType(fileSource: string): string {\n        return this.helperService.getFileType(fileSource);\n    }\n}\n","import { Component, OnInit, DoCheck, AfterViewInit, EventEmitter, Output, ViewChild, HostBinding, ElementRef, HostListener, Input } from '@angular/core';\nimport { SafeResourceUrl } from '@angular/platform-browser';\nimport { NgxGalleryHelperService } from './ngx-gallery-helper.service';\nimport { NgxGalleryOptions } from './ngx-gallery-options';\nimport { NgxGalleryImageSize } from './ngx-gallery-image-size.model';\nimport { NgxGalleryImage } from './ngx-gallery-image.model';\nimport { NgxGalleryOrderedImage } from './ngx-gallery-ordered-image.model';\nimport { NgxGalleryPreviewComponent } from './ngx-gallery-preview/ngx-gallery-preview.component';\nimport { NgxGalleryImageComponent } from './ngx-gallery-image/ngx-gallery-image.component';\nimport { NgxGalleryThumbnailsComponent } from './ngx-gallery-thumbnails/ngx-gallery-thumbnails.component';\nimport { NgxGalleryLayout } from './ngx-gallery-layout.model';\n\n@Component({\n    selector: 'ngx-gallery',\n    template: `\n    <div class=\"ngx-gallery-layout {{currentOptions?.layout}}\">\n        <ngx-gallery-image *ngIf=\"currentOptions?.image\" [style.height]=\"getImageHeight()\" [images]=\"mediumImages\" [clickable]=\"currentOptions?.preview\" [selectedIndex]=\"selectedIndex\" [arrows]=\"currentOptions?.imageArrows\" [arrowsAutoHide]=\"currentOptions?.imageArrowsAutoHide\" [arrowPrevIcon]=\"currentOptions?.arrowPrevIcon\" [arrowNextIcon]=\"currentOptions?.arrowNextIcon\" [swipe]=\"currentOptions?.imageSwipe\" [animation]=\"currentOptions?.imageAnimation\" [size]=\"currentOptions?.imageSize\" [autoPlay]=\"currentOptions?.imageAutoPlay\" [autoPlayInterval]=\"currentOptions?.imageAutoPlayInterval\" [autoPlayPauseOnHover]=\"currentOptions?.imageAutoPlayPauseOnHover\" [infinityMove]=\"currentOptions?.imageInfinityMove\"  [lazyLoading]=\"currentOptions?.lazyLoading\" [actions]=\"currentOptions?.imageActions\" [descriptions]=\"descriptions\" [showDescription]=\"currentOptions?.imageDescription\" [bullets]=\"currentOptions?.imageBullets\" (onClick)=\"openPreview($event)\" (onActiveChange)=\"selectFromImage($event)\"></ngx-gallery-image>\n        <ngx-gallery-thumbnails *ngIf=\"currentOptions?.thumbnails\" [style.marginTop]=\"getThumbnailsMarginTop()\" [style.marginBottom]=\"getThumbnailsMarginBottom()\" [style.height]=\"getThumbnailsHeight()\" [images]=\"smallImages\" [links]=\"currentOptions?.thumbnailsAsLinks ? links : []\" [labels]=\"labels\" [linkTarget]=\"currentOptions?.linkTarget\" [selectedIndex]=\"selectedIndex\" [columns]=\"currentOptions?.thumbnailsColumns\" [rows]=\"currentOptions?.thumbnailsRows\" [margin]=\"currentOptions?.thumbnailMargin\" [arrows]=\"currentOptions?.thumbnailsArrows\" [arrowsAutoHide]=\"currentOptions?.thumbnailsArrowsAutoHide\" [arrowPrevIcon]=\"currentOptions?.arrowPrevIcon\" [arrowNextIcon]=\"currentOptions?.arrowNextIcon\" [clickable]=\"currentOptions?.image || currentOptions?.preview\" [swipe]=\"currentOptions?.thumbnailsSwipe\" [size]=\"currentOptions?.thumbnailSize\" [moveSize]=\"currentOptions?.thumbnailsMoveSize\" [order]=\"currentOptions?.thumbnailsOrder\" [remainingCount]=\"currentOptions?.thumbnailsRemainingCount\" [lazyLoading]=\"currentOptions?.lazyLoading\" [actions]=\"currentOptions?.thumbnailActions\"  (onActiveChange)=\"selectFromThumbnails($event)\"></ngx-gallery-thumbnails>\n        <ngx-gallery-preview [images]=\"bigImages\" [descriptions]=\"descriptions\" [showDescription]=\"currentOptions?.previewDescription\" [arrowPrevIcon]=\"currentOptions?.arrowPrevIcon\" [arrowNextIcon]=\"currentOptions?.arrowNextIcon\" [closeIcon]=\"currentOptions?.closeIcon\" [fullscreenIcon]=\"currentOptions?.fullscreenIcon\" [spinnerIcon]=\"currentOptions?.spinnerIcon\" [arrows]=\"currentOptions?.previewArrows\" [arrowsAutoHide]=\"currentOptions?.previewArrowsAutoHide\" [swipe]=\"currentOptions?.previewSwipe\" [fullscreen]=\"currentOptions?.previewFullscreen\" [forceFullscreen]=\"currentOptions?.previewForceFullscreen\" [closeOnClick]=\"currentOptions?.previewCloseOnClick\" [closeOnEsc]=\"currentOptions?.previewCloseOnEsc\" [keyboardNavigation]=\"currentOptions?.previewKeyboardNavigation\" [animation]=\"currentOptions?.previewAnimation\" [autoPlay]=\"currentOptions?.previewAutoPlay\" [autoPlayInterval]=\"currentOptions?.previewAutoPlayInterval\" [autoPlayPauseOnHover]=\"currentOptions?.previewAutoPlayPauseOnHover\" [infinityMove]=\"currentOptions?.previewInfinityMove\" [zoom]=\"currentOptions?.previewZoom\" [zoomStep]=\"currentOptions?.previewZoomStep\" [zoomMax]=\"currentOptions?.previewZoomMax\" [zoomMin]=\"currentOptions?.previewZoomMin\" [zoomInIcon]=\"currentOptions?.zoomInIcon\" [zoomOutIcon]=\"currentOptions?.zoomOutIcon\" [actions]=\"currentOptions?.actions\" [rotate]=\"currentOptions?.previewRotate\" [rotateLeftIcon]=\"currentOptions?.rotateLeftIcon\" [rotateRightIcon]=\"currentOptions?.rotateRightIcon\" [download]=\"currentOptions?.previewDownload\" [downloadIcon]=\"currentOptions?.downloadIcon\" [bullets]=\"currentOptions?.previewBullets\" (onClose)=\"onPreviewClose()\" (onOpen)=\"onPreviewOpen()\" (onActiveChange)=\"previewSelect($event)\" [class.ngx-gallery-active]=\"previewEnabled\"></ngx-gallery-preview>\n    </div>\n    `,\n    styleUrls: ['./ngx-gallery.component.scss'],\n    providers: [NgxGalleryHelperService]\n})\nexport class NgxGalleryComponent implements OnInit, DoCheck, AfterViewInit {\n    @Input() options: NgxGalleryOptions[];\n    @Input() images: NgxGalleryImage[];\n\n    @Output() imagesReady = new EventEmitter();\n    @Output() change = new EventEmitter<{ index: number; image: NgxGalleryImage; }>();\n    @Output() previewOpen = new EventEmitter();\n    @Output() previewClose = new EventEmitter();\n    @Output() previewChange = new EventEmitter<{ index: number; image: NgxGalleryImage; }>();\n\n    smallImages: string[] | SafeResourceUrl[];\n    mediumImages: NgxGalleryOrderedImage[];\n    bigImages: string[] | SafeResourceUrl[];\n    descriptions: string[];\n    links: string[];\n    labels: string[];\n\n    oldImages: NgxGalleryImage[];\n    oldImagesLength = 0;\n\n    selectedIndex = 0;\n    previewEnabled: boolean;\n\n    currentOptions: NgxGalleryOptions;\n\n    private breakpoint: number | undefined = undefined;\n    private prevBreakpoint: number | undefined = undefined;\n    private fullWidthTimeout: any;\n\n    @ViewChild(NgxGalleryPreviewComponent) preview: NgxGalleryPreviewComponent;\n    @ViewChild(NgxGalleryImageComponent) image: NgxGalleryImageComponent;\n    @ViewChild(NgxGalleryThumbnailsComponent) thubmnails: NgxGalleryThumbnailsComponent;\n\n    @HostBinding('style.width') width: string;\n    @HostBinding('style.height') height: string;\n    @HostBinding('style.left') left: string;\n\n    constructor(private myElement: ElementRef, private helperService: NgxGalleryHelperService) { }\n\n    ngOnInit() {\n        if (this.options != undefined) {\n            this.options = this.options.map((opt) => new NgxGalleryOptions(opt));\n        }\n        this.sortOptions();\n        this.setBreakpoint();\n        this.setOptions();\n        this.checkFullWidth();\n        if (this.currentOptions) {\n            this.selectedIndex = <number>this.currentOptions.startIndex;\n        }\n    }\n\n    ngDoCheck(): void {\n        if (this.images !== undefined && (this.images.length !== this.oldImagesLength)\n            || (this.images !== this.oldImages)) {\n            this.oldImagesLength = this.images.length;\n            this.oldImages = this.images;\n            this.setOptions();\n            this.setImages();\n\n            if (this.images && this.images.length) {\n                this.imagesReady.emit();\n            }\n\n            if (this.image) {\n                this.image.reset(<number>this.currentOptions.startIndex);\n            }\n\n            if (this.currentOptions.thumbnailsAutoHide && this.currentOptions.thumbnails\n                && this.images.length <= 1) {\n                this.currentOptions.thumbnails = false;\n                this.currentOptions.imageArrows = false;\n            }\n\n            this.resetThumbnails();\n        }\n    }\n\n    ngAfterViewInit(): void {\n        this.checkFullWidth();\n    }\n\n    @HostListener('window:resize') onResize() {\n        this.setBreakpoint();\n\n        if (this.prevBreakpoint !== this.breakpoint) {\n            this.setOptions();\n            this.resetThumbnails();\n        }\n\n        if (this.currentOptions && this.currentOptions.fullWidth) {\n\n            if (this.fullWidthTimeout) {\n                clearTimeout(this.fullWidthTimeout);\n            }\n\n            this.fullWidthTimeout = setTimeout(() => {\n                this.checkFullWidth();\n            }, 200);\n        }\n    }\n\n    getImageHeight(): string {\n        return (this.currentOptions && this.currentOptions.thumbnails) ?\n            this.currentOptions.imagePercent + '%' : '100%';\n    }\n\n    getThumbnailsHeight(): string {\n        if (this.currentOptions && this.currentOptions.image) {\n            return 'calc(' + this.currentOptions.thumbnailsPercent + '% - '\n                + this.currentOptions.thumbnailsMargin + 'px)';\n        } else {\n            return '100%';\n        }\n    }\n\n    getThumbnailsMarginTop(): string {\n        if (this.currentOptions && this.currentOptions.layout === NgxGalleryLayout.ThumbnailsBottom) {\n            return this.currentOptions.thumbnailsMargin + 'px';\n        } else {\n            return '0px';\n        }\n    }\n\n    getThumbnailsMarginBottom(): string {\n        if (this.currentOptions && this.currentOptions.layout === NgxGalleryLayout.ThumbnailsTop) {\n            return this.currentOptions.thumbnailsMargin + 'px';\n        } else {\n            return '0px';\n        }\n    }\n\n    openPreview(index: number): void {\n        if (this.currentOptions.previewCustom) {\n            this.currentOptions.previewCustom(index);\n        } else {\n            this.previewEnabled = true;\n            this.preview.open(index);\n        }\n    }\n\n    onPreviewOpen(): void {\n        this.previewOpen.emit();\n\n        if (this.image && this.image.autoPlay) {\n            this.image.stopAutoPlay();\n        }\n    }\n\n    onPreviewClose(): void {\n        this.previewEnabled = false;\n        this.previewClose.emit();\n\n        if (this.image && this.image.autoPlay) {\n            this.image.startAutoPlay();\n        }\n    }\n\n    selectFromImage(index: number) {\n        this.select(index);\n    }\n\n    selectFromThumbnails(index: number) {\n        this.select(index);\n\n        if (this.currentOptions && this.currentOptions.thumbnails && this.currentOptions.preview\n            && (!this.currentOptions.image || this.currentOptions.thumbnailsRemainingCount)) {\n            this.openPreview(this.selectedIndex);\n        }\n    }\n\n    show(index: number): void {\n        this.select(index);\n    }\n\n    showNext(): void {\n        this.image.showNext();\n    }\n\n    showPrev(): void {\n        this.image.showPrev();\n    }\n\n    canShowNext(): boolean {\n        if (this.images && this.currentOptions) {\n            return (this.currentOptions.imageInfinityMove || this.selectedIndex < this.images.length - 1)\n                ? true : false;\n        } else {\n            return false;\n        }\n    }\n\n    canShowPrev(): boolean {\n        if (this.images && this.currentOptions) {\n            return (this.currentOptions.imageInfinityMove || this.selectedIndex > 0) ? true : false;\n        } else {\n            return false;\n        }\n    }\n\n    previewSelect(index: number) {\n        this.previewChange.emit({ index, image: this.images[index] });\n    }\n\n    moveThumbnailsRight() {\n        this.thubmnails.moveRight();\n    }\n\n    moveThumbnailsLeft() {\n        this.thubmnails.moveLeft();\n    }\n\n    canMoveThumbnailsRight() {\n        return this.thubmnails.canMoveRight();\n    }\n\n    canMoveThumbnailsLeft() {\n        return this.thubmnails.canMoveLeft();\n    }\n\n    private resetThumbnails() {\n        if (this.thubmnails) {\n            this.thubmnails.reset(<number>this.currentOptions.startIndex);\n        }\n    }\n\n    private select(index: number) {\n        this.selectedIndex = index;\n\n        this.change.emit({\n            index,\n            image: this.images[index]\n        });\n    }\n\n    private checkFullWidth(): void {\n        if (this.currentOptions && this.currentOptions.fullWidth) {\n            this.width = document.body.clientWidth + 'px';\n            this.left = (-(document.body.clientWidth -\n                this.myElement.nativeElement.parentNode.innerWidth) / 2) + 'px';\n        }\n    }\n\n    private setImages(): void {\n        const _this: NgxGalleryComponent = this;\n        this.images.forEach(function (img) {\n            img.type = _this.helperService.getFileType(<string>img.url || <string>img.big || <string>img.medium || <string>img.small || '');\n        });\n        this.smallImages = this.images.map((img) => <string>img.small);\n        this.mediumImages = this.images.map((img, i) => new NgxGalleryOrderedImage({\n            src: img.medium,\n            type: img.type,\n            index: i\n        }));\n        this.bigImages = this.images.map((img) => <string>img.big);\n        this.descriptions = this.images.map((img) => <string>img.description);\n        this.links = this.images.map((img) => <string>img.url);\n        this.labels = this.images.map((img) => <string>img.label);\n    }\n\n    private setBreakpoint(): void {\n        this.prevBreakpoint = this.breakpoint;\n        let breakpoints;\n\n        if (typeof window !== 'undefined') {\n            if (this.options != undefined) {\n                breakpoints = this.options.filter((opt) => opt.breakpoint >= window.innerWidth)\n                    .map((opt) => opt.breakpoint);\n            }\n        }\n\n        if (breakpoints && breakpoints.length) {\n            this.breakpoint = breakpoints.pop();\n        } else {\n            this.breakpoint = undefined;\n        }\n    }\n\n    private sortOptions(): void {\n        if (this.options != undefined) {\n            this.options = [\n                ...this.options.filter((a) => a.breakpoint === undefined),\n                ...this.options\n                    .filter((a) => a.breakpoint !== undefined)\n                    .sort((a, b) => b.breakpoint - a.breakpoint)\n            ];\n        }\n    }\n\n    private setOptions(): void {\n        this.currentOptions = new NgxGalleryOptions({});\n        if (this.options != undefined) {\n            this.options\n                .filter((opt) => opt.breakpoint === undefined || opt.breakpoint >= this.breakpoint)\n                .map((opt) => this.combineOptions(this.currentOptions, opt));\n        }\n\n        this.width = <string>this.currentOptions.width;\n        this.height = <string>this.currentOptions.height;\n    }\n\n    private combineOptions(first: NgxGalleryOptions, second: NgxGalleryOptions) {\n        Object.keys(second).map((val) => first[val] = second[val] !== undefined ? second[val] : first[val]);\n    }\n}\n","import { Component, ChangeDetectionStrategy, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'ngx-gallery-action',\n  templateUrl: './ngx-gallery-action.component.html',\n  styleUrls: ['./ngx-gallery-action.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NgxGalleryActionComponent {\n  @Input() icon: string;\n  @Input() disabled = false;\n  @Input() titleText = '';\n\n  @Output() onClick: EventEmitter<Event> = new EventEmitter();\n\n  handleClick(event: Event) {\n      if (!this.disabled) {\n          this.onClick.emit(event);\n      }\n\n      event.stopPropagation();\n      event.preventDefault();\n  }\n}\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'ngx-gallery-arrows',\n  templateUrl: './ngx-gallery-arrows.component.html',\n  styleUrls: ['./ngx-gallery-arrows.component.scss']\n})\nexport class NgxGalleryArrowsComponent{\n  @Input() prevDisabled: boolean;\n  @Input() nextDisabled: boolean;\n  @Input() arrowPrevIcon: string;\n  @Input() arrowNextIcon: string;\n\n  @Output() onPrevClick = new EventEmitter();\n  @Output() onNextClick = new EventEmitter();\n\n  handlePrevClick(): void {\n      this.onPrevClick.emit();\n  }\n\n  handleNextClick(): void {\n      this.onNextClick.emit();\n  }\n}\n","import { Component, Input, EventEmitter, Output } from '@angular/core';\n\n@Component({\n  selector: 'ngx-gallery-bullets',\n  templateUrl: './ngx-gallery-bullets.component.html',\n  styleUrls: ['./ngx-gallery-bullets.component.scss']\n})\nexport class NgxGalleryBulletsComponent {\n  @Input() count: number;\n  @Input() active: number = 0;\n\n  @Output() onChange = new EventEmitter();\n\n  getBullets(): number[] {\n      return Array(this.count);\n  }\n\n  handleChange(event: Event, index: number): void {\n      this.onChange.emit(index);\n  }\n}\n","import { NgModule, NO_ERRORS_SCHEMA,CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { NgxGalleryComponent } from './ngx-gallery.component';\nimport { NgxGalleryPreviewComponent } from './ngx-gallery-preview/ngx-gallery-preview.component';\nimport { NgxGalleryImageComponent } from './ngx-gallery-image/ngx-gallery-image.component';\nimport { NgxGalleryThumbnailsComponent } from './ngx-gallery-thumbnails/ngx-gallery-thumbnails.component';\nimport { NgxGalleryActionComponent } from './ngx-gallery-action/ngx-gallery-action.component';\nimport { NgxGalleryArrowsComponent } from './ngx-gallery-arrows/ngx-gallery-arrows.component';\nimport { NgxGalleryBulletsComponent } from './ngx-gallery-bullets/ngx-gallery-bullets.component';\nimport { CommonModule } from '@angular/common';\n\n\n\n@NgModule({\n  declarations: [\n    NgxGalleryComponent,\n    NgxGalleryPreviewComponent,\n    NgxGalleryImageComponent,\n    NgxGalleryThumbnailsComponent,\n    NgxGalleryActionComponent,\n    NgxGalleryArrowsComponent,\n    NgxGalleryBulletsComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [NgxGalleryComponent],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA,NO_ERRORS_SCHEMA]\n})\nexport class NgxGalleryModule { }\n","import { SafeResourceUrl } from '@angular/platform-browser';\n\nexport interface INgxGalleryImage {\n    small?: string | SafeResourceUrl;\n    medium?: string | SafeResourceUrl;\n    big?: string | SafeResourceUrl;\n    description?: string;\n    url?: string;\n    type?: string;\n    label?: string;\n}\n\nexport class NgxGalleryImage implements INgxGalleryImage {\n    small?: string | SafeResourceUrl;\n    medium?: string | SafeResourceUrl;\n    big?: string | SafeResourceUrl;\n    description?: string;\n    url?: string;\n    type?: string;\n    label?: string;\n\n    constructor(obj: INgxGalleryImage) {\n        this.small = obj.small;\n        this.medium = obj.medium;\n        this.big = obj.big;\n        this.description = obj.description;\n        this.url = obj.url;\n        this.type = obj.type;\n        this.label = obj.label;\n    }\n}\n"]}